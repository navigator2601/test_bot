# –§–∞–π–ª: handlers/admin/db_operations.py

import logging
from aiogram import Router, F, types
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove # –î–æ–¥–∞–Ω–æ ReplyKeyboardRemove
from aiogram.enums.parse_mode import ParseMode
from aiogram.fsm.context import FSMContext
from aiogram.filters import StateFilter # üî• –í–ò–ü–†–ê–í–õ–ï–ù–û: –î–æ–¥–∞–Ω–æ StateFilter
from asyncpg import Pool
from aiogram.exceptions import TelegramBadRequest
from typing import List, Dict, Optional
import random

# –í–ò–ó–ù–ê–ß–ï–ù–ù–Ø ROUTER
router = Router()
logger = logging.getLogger(__name__)

# üî• –í–ò–ü–†–ê–í–õ–ï–ù–û: –î–æ–¥–∞–Ω–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —ñ–º–ø–æ—Ä—Ç–∏
from filters.admin_filter import AdminAccessFilter # –Ø–∫—â–æ –≤–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç–µ –∞–¥–º—ñ–Ω-—Ñ—ñ–ª—å—Ç—Ä
from common.states import DbOperationStates, MenuStates
from database.users_db import get_user_access_level
from keyboards.reply_keyboard import get_main_menu_keyboard

# –Ü–ú–ü–û–†–¢ –ö–õ–ê–í–Ü–ê–¢–£–† –ó keyboards/admin_inline_keyboard.py
from keyboards.admin_inline_keyboard import (
    get_db_operations_start_keyboard,  # üî• –í–ò–ü–†–ê–í–õ–ï–ù–û: –¶–ï–ô –Ü–ú–ü–û–†–¢ –ë–£–í –í–¢–†–ê–ß–ï–ù–ò–ô
    get_db_operations_edit_category_keyboard,
    get_admin_brand_series_selection_keyboard
)

# –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –∞–¥–º—ñ–Ω-—Ñ—ñ–ª—å—Ç—Ä–∞ –¥–æ –≤—Å—å–æ–≥–æ —Ä–æ—É—Ç–µ—Ä–∞
# –Ø–∫—â–æ –≤–∏ –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç–µ —Ñ—ñ–ª—å—Ç—Ä –Ω–∞ —Ü—å–æ–º—É —Ä—ñ–≤–Ω—ñ, –º–æ–∂–Ω–∞ –ø—Ä–∏–±—Ä–∞—Ç–∏, 
# –∞–ª–µ —Ü–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–∞ –¥–ª—è –∞–¥–º—ñ–Ω-—Ä–æ—É—Ç–µ—Ä—ñ–≤.
router.message.filter(AdminAccessFilter())
router.callback_query.filter(AdminAccessFilter())

# ----------------------------------------------------------------------
# üî•üî•üî• –§–£–ù–ö–¶–Ü–Ø –û–¢–†–ò–ú–ê–ù–ù–Ø –î–ê–ù–ò–• –ó –ë–î (–í–ò–ö–û–†–ò–°–¢–û–í–£–Ñ –í–ê–® SQL) üî•üî•üî•
# ----------------------------------------------------------------------

# –í–∞—à SQL-–∑–∞–ø–∏—Ç –¥–ª—è –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É % –Ω–∞–ø–æ–≤–Ω–µ–Ω–Ω—è
# ... (–≤–µ—Å—å SQL –∑–∞–ø–∏—Ç –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –±–µ–∑ –∑–º—ñ–Ω) ...
# ...

# --- –û–ë–†–û–ë–ù–ò–ö: –í—Ö—ñ–¥ —É –º–æ–¥—É–ª—å "–ö–µ—Ä—É–≤–∞–Ω–Ω—è –ë–î" (–∑–∞ —Ç–µ–∫—Å—Ç–æ–º Reply Keyboard) ---
@router.message(
    F.text == "üìù –î–æ–¥–∞—Ç–∏ –∞–±–æ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ",
    StateFilter(MenuStates.main_menu)
)
async def start_db_operations(message: types.Message, state: FSMContext, db_pool: Pool):
    user_id = message.from_user.id
    current_state = await state.get_state()

    logger.info(
        f"–ê–¥–º—ñ–Ω {user_id} —É —Å—Ç–∞–Ω—ñ {current_state} –Ω–∞—Ç–∏—Å–Ω—É–≤ 'üìù –î–æ–¥–∞—Ç–∏ –∞–±–æ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ'. "
        f"–ó–∞–ø—É—Å–∫ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –ë–î."
    )

    await state.set_state(DbOperationStates.db_operation_start)

    # üî• –†—è–¥–æ–∫, –¥–µ –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞, —Ç–µ–ø–µ—Ä –ø—Ä–∞—Ü—é–≤–∞—Ç–∏–º–µ –∫–æ—Ä–µ–∫—Ç–Ω–æ
    keyboard = get_db_operations_start_keyboard()

    await message.answer(
        "üõ†Ô∏è **–ö–µ—Ä—É–≤–∞–Ω–Ω—è –ë–∞–∑–æ—é –î–∞–Ω–∏—Ö**\n\n"
        "–û–±–µ—Ä—ñ—Ç—å –æ–ø–µ—Ä–∞—Ü—ñ—é –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –¥–∞–Ω–∏–º–∏:",
        reply_markup=keyboard,
        parse_mode=ParseMode.MARKDOWN
    )

# ... (—Ä–µ—à—Ç–∞ –∫–æ–¥—É) ...