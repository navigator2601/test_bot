# –§–∞–π–ª: keyboards/admin_inline_keyboard.py

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import logging
from typing import List, Dict

logger = logging.getLogger(__name__)

# --- –ö–õ–ê–í–Ü–ê–¢–£–†–ê 1: –í–∏–±—ñ—Ä –î–æ–¥–∞—Ç–∏/–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ ---
def get_db_operations_start_keyboard() -> InlineKeyboardMarkup:
    """
    –°—Ç–≤–æ—Ä—é—î —ñ–Ω–ª–∞–π–Ω-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –≤–∏–±–æ—Ä—É –ø–æ—á–∞—Ç–∫–æ–≤–æ—ó –æ–ø–µ—Ä–∞—Ü—ñ—ó
    –∫–µ—Ä—É–≤–∞–Ω–Ω—è –ë–î: –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∞–±–æ –î–æ–¥–∞–≤–∞–Ω–Ω—è.
    """
    logger.debug("–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —ñ–Ω–ª–∞–π–Ω-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –¥–ª—è –≤–∏–±–æ—Ä—É DB –æ–ø–µ—Ä–∞—Ü—ñ—ó: –†–µ–¥–∞–≥—É–≤–∞—Ç–∏/–î–æ–¥–∞—Ç–∏/–°–∫–∞—Å—É–≤–∞—Ç–∏.")
    
    keyboard_buttons = [
        # –†—è–¥ 1: –û–ø–µ—Ä–∞—Ü—ñ—ó
        [
            InlineKeyboardButton(text="‚úçÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ", callback_data="db_op_edit"),
            InlineKeyboardButton(text="‚ûï –î–æ–¥–∞—Ç–∏ –¥–∞–Ω—ñ", callback_data="db_op_add")
        ],
        # –†—è–¥ 2: –°–∫–∞—Å—É–≤–∞–Ω–Ω—è
        [
            InlineKeyboardButton(text="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏", callback_data="cancel_admin_op")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard_buttons)


# --- –ö–õ–ê–í–Ü–ê–¢–£–†–ê 2: –í–∏–±—ñ—Ä –æ–±'—î–∫—Ç–∞ –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è ---
def get_db_operations_edit_category_keyboard() -> InlineKeyboardMarkup:
    """
    –°—Ç–≤–æ—Ä—é—î —ñ–Ω–ª–∞–π–Ω-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –≤–∏–±–æ—Ä—É –æ–±'—î–∫—Ç–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è: –ë—Ä–µ–Ω–¥–∏/–°–µ—Ä—ñ—ó –∞–±–æ –ú–æ–¥–µ–ª—ñ.
    """
    logger.debug("–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —ñ–Ω–ª–∞–π–Ω-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –¥–ª—è –≤–∏–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è: –ë—Ä–µ–Ω–¥–∏/–ú–æ–¥–µ–ª—ñ.")
    
    keyboard_buttons = [
        # –†—è–¥ 1: –í–∏–±—ñ—Ä –æ–±'—î–∫—Ç–∞
        [
            InlineKeyboardButton(text="üè≠ –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ë—Ä–µ–Ω–¥–∏/–°–µ—Ä—ñ—ó", callback_data="db_edit_brands"),
        ],
        [
            InlineKeyboardButton(text="‚ùÑÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ú–æ–¥–µ–ª—ñ", callback_data="db_edit_models"),
        ],
        # –†—è–¥ 2: –ù–∞–≤—ñ–≥–∞—Ü—ñ—è
        [
            InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ (–í–∏–±—ñ—Ä –æ–ø–µ—Ä–∞—Ü—ñ—ó)", callback_data="db_op_start"),
            InlineKeyboardButton(text="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏", callback_data="cancel_admin_op")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard_buttons)


# --- üî• –ö–õ–ê–í–Ü–ê–¢–£–†–ê 3: –í–∏–±—ñ—Ä –ë—Ä–µ–Ω–¥—É/–°–µ—Ä—ñ—ó –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è ---
def get_admin_brand_series_selection_keyboard(brands_data: List[Dict]) -> InlineKeyboardMarkup:
    """
    –°—Ç–≤–æ—Ä—é—î —ñ–Ω–ª–∞–π–Ω-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑—ñ —Å–ø–∏—Å–∫–æ–º –±—Ä–µ–Ω–¥—ñ–≤/—Å–µ—Ä—ñ–π —Ç–∞ —ó—Ö–Ω—ñ–º % –Ω–∞–ø–æ–≤–Ω–µ–Ω–Ω—è.
    brands_data –æ—á—ñ–∫—É—î—Ç—å—Å—è —è–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø–∏—Ç—É, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥:
    [{'brand_name': 'Gree', 'series_name_ukr': 'Bora', 'completeness_percent': 75.5, 'series_id': 1}, ...]
    """
    logger.debug(f"–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –≤–∏–±–æ—Ä—É –±—Ä–µ–Ω–¥—ñ–≤. –ö—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤: {len(brands_data)}")
    
    keyboard_buttons = []

    # –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –±—Ä–µ–Ω–¥—É/—Å–µ—Ä—ñ—ó
    for item in brands_data:
        # üî• –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ñ–º–µ–Ω–∞ –ø–æ–ª—ñ–≤ –∑ –≤–∞—à–æ–≥–æ SQL-–∑–∞–ø–∏—Ç—É üî•
        brand_name = item.get('brand_name', 'N/A')
        series_name = item.get('series_name_ukr', 'N/A')
        fill_percent = int(item.get('completeness_percent', 0))
        series_id = item.get('series_id')
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ ID (—è–∫—â–æ –∑–∞–ø–∏—Ç –ø–æ–≤–µ—Ä–Ω—É–≤ NULL, —â–æ –Ω–µ–±–∞–∂–∞–Ω–æ)
        if series_id is None:
            logger.warning(f"–ü—Ä–æ–ø—É—â–µ–Ω–æ —Å–µ—Ä—ñ—é {brand_name}:{series_name} —á–µ—Ä–µ–∑ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å series_id.")
            continue

        # –§–æ—Ä–º–∞—Ç: –ë—Ä–µ–Ω–¥: –°–µ—Ä—ñ—è - %
        text = f"üè≠ {brand_name}: {series_name} - {fill_percent}%"
        # callback_data: db_edit_series_select:1 (–¥–µ 1 - —Ü–µ series_id)
        callback_data = f"db_edit_series_select:{series_id}" 
        
        keyboard_buttons.append(
            [InlineKeyboardButton(text=text, callback_data=callback_data)]
        )

    # –î–æ–¥–∞–≤–∞–Ω–Ω—è —Å–ª—É–∂–±–æ–≤–∏—Ö –∫–Ω–æ–ø–æ–∫ –≤ –∫—ñ–Ω—Ü—ñ
    service_buttons = [
        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –±—Ä–µ–Ω–¥—É
        [InlineKeyboardButton(text="‚ûï –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π –ë—Ä–µ–Ω–¥/–°–µ—Ä—ñ—é", callback_data="db_add_new_brand_series")],
        # –ù–∞–≤—ñ–≥–∞—Ü—ñ—è
        [
            InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ (–í–∏–±—ñ—Ä –æ–±'—î–∫—Ç–∞)", callback_data="db_op_edit"),
            InlineKeyboardButton(text="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏ (–í–∏—Ö—ñ–¥)", callback_data="cancel_admin_op")
        ]
    ]
    
    keyboard_buttons.extend(service_buttons)
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard_buttons)