# –§–∞–π–ª: database/db_admin_functions.py (–°—Ç–≤–æ—Ä–µ–Ω–Ω—è/–æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó)

from asyncpg import Pool
from typing import List, Dict
import random # –¢—ñ–ª—å–∫–∏ –¥–ª—è —ñ–º—ñ—Ç–∞—Ü—ñ—ó

# –ü—Ä–∏–∫–ª–∞–¥ —ñ–º—ñ—Ç–∞—Ü—ñ—ó —Ñ—É–Ω–∫—Ü—ñ—ó, —è–∫—É –≤–∏ –º–∞—î—Ç–µ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏
async def get_brands_and_series_with_fill_percent(db_pool: Pool) -> List[Dict]:
    """
    –û—Ç—Ä–∏–º—É—î –∑ –ë–î —Å–ø–∏—Å–æ–∫ —É—Å—ñ—Ö –±—Ä–µ–Ω–¥—ñ–≤/—Å–µ—Ä—ñ–π –∑ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–º % –Ω–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
    (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —É—Å—ñ—Ö –æ–±–æ–≤'—è–∑–∫–æ–≤–∏—Ö –ø–æ–ª—ñ–≤ –¥–ª—è –º–æ–¥–µ–ª–µ–π –≤ —Ü—ñ–π —Å–µ—Ä—ñ—ó).
    
    –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫: [{'name': '–ë—Ä–µ–Ω–¥', 'series_name': '–°–µ—Ä—ñ—è', 'fill_percent': 75, 'brand_id': 1}, ...]
    """
    
    # üî•üî•üî• –ó–ê–ì–õ–£–®–ö–ê: –ó–∞–º—ñ–Ω—ñ—Ç—å —Ü–µ–π –±–ª–æ–∫ –Ω–∞ —Ä–µ–∞–ª—å–Ω–∏–π –∑–∞–ø–∏—Ç –¥–æ –ë–î üî•üî•üî•
    logger.warning("–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –∑–∞–≥–ª—É—à–∫–∞ get_brands_and_series_with_fill_percent. –ü–æ—Ç—Ä—ñ–±–Ω–∞ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—è.")
    
    data = [
        {'name': 'Gree', 'series_name': 'Bora', 'fill_percent': random.randint(50, 100), 'brand_id': 1},
        {'name': 'Daikin', 'series_name': 'FTX', 'fill_percent': random.randint(50, 100), 'brand_id': 2},
        {'name': 'Mitsubishi', 'series_name': 'Heavy', 'fill_percent': random.randint(10, 50), 'brand_id': 3},
        {'name': 'Cooper&Hunter', 'series_name': 'Veritas', 'fill_percent': random.randint(80, 100), 'brand_id': 4},
        {'name': 'Gree', 'series_name': 'Lomo', 'fill_percent': random.randint(10, 90), 'brand_id': 5},
    ]
    # üî•üî•üî• –ö–Ü–ù–ï–¶–¨ –ó–ê–ì–õ–£–®–ö–ò üî•üî•üî•
    
    return data