-- core.countries визначення

-- Drop table

-- DROP TABLE core.countries;

CREATE TABLE core.countries (
	country_id serial4 NOT NULL, -- Унікальний ідентифікатор країни (PK).
	country_name_ukr varchar(100) NULL, -- Назва країни українською.
	country_name_eng varchar(100) NULL, -- Назва країни англійською.
	iso_code_2 bpchar(2) NULL, -- Двобуквений ISO-код країни (наприклад, UA, US).
	iso_code_3 bpchar(3) NULL, -- Трибуквений ISO-код країни (наприклад, UKR, USA).
	CONSTRAINT countries_country_name_ukr_key UNIQUE (country_name_ukr),
	CONSTRAINT countries_iso_code_2_key UNIQUE (iso_code_2),
	CONSTRAINT countries_pkey PRIMARY KEY (country_id)
);
COMMENT ON TABLE core.countries IS 'Довідник країн.';

-- Column comments

COMMENT ON COLUMN core.countries.country_id IS 'Унікальний ідентифікатор країни (PK).';
COMMENT ON COLUMN core.countries.country_name_ukr IS 'Назва країни українською.';
COMMENT ON COLUMN core.countries.country_name_eng IS 'Назва країни англійською.';
COMMENT ON COLUMN core.countries.iso_code_2 IS 'Двобуквений ISO-код країни (наприклад, UA, US).';
COMMENT ON COLUMN core.countries.iso_code_3 IS 'Трибуквений ISO-код країни (наприклад, UKR, USA).';

-- Permissions

ALTER TABLE core.countries OWNER TO postgres;
GRANT ALL ON TABLE core.countries TO postgres;


-- core.addresses визначення

-- Drop table

-- DROP TABLE core.addresses;

CREATE TABLE core.addresses (
	address_id serial4 NOT NULL, -- Унікальний ідентифікатор адреси (PK).
	address_ukr text NOT NULL,
	address_eng text NULL, -- Адреса англійською мовою.
	country_id int4 NULL, -- Країна, до якої належить ця адреса.
	CONSTRAINT addresses_address_ukr_key UNIQUE (address_ukr),
	CONSTRAINT addresses_pkey PRIMARY KEY (address_id),
	CONSTRAINT addresses_country_id_fkey FOREIGN KEY (country_id) REFERENCES core.countries(country_id) ON DELETE RESTRICT
);
COMMENT ON TABLE core.addresses IS 'Довідник унікальних юридичних та фактичних адрес.';

-- Column comments

COMMENT ON COLUMN core.addresses.address_id IS 'Унікальний ідентифікатор адреси (PK).';
COMMENT ON COLUMN core.addresses.address_eng IS 'Адреса англійською мовою.';
COMMENT ON COLUMN core.addresses.country_id IS 'Країна, до якої належить ця адреса.';

-- Permissions

ALTER TABLE core.addresses OWNER TO postgres;
GRANT ALL ON TABLE core.addresses TO postgres;


-- core.legal_entities визначення

-- Drop table

-- DROP TABLE core.legal_entities;

CREATE TABLE core.legal_entities (
	entity_id serial4 NOT NULL,
	full_name_ukr varchar(255) NOT NULL, -- Повна офіційна назва юридичної особи українською.
	short_name_ukr varchar(100) NULL, -- Скорочена назва юридичної особи українською.
	country_id int4 NULL, -- Зовнішній ключ до країни реєстрації юр. особи.
	edrpou varchar(10) NULL, -- Код ЄДРПОУ.
	vat_number varchar(20) NULL, -- Індивідуальний податковий номер.
	contact_person_name varchar(255) NULL,
	email varchar(255) NULL,
	phone varchar(20) NULL,
	website varchar(255) NULL,
	address_id int4 NULL,
	CONSTRAINT legal_entities_full_name_ukr_key UNIQUE (full_name_ukr),
	CONSTRAINT legal_entities_pkey PRIMARY KEY (entity_id),
	CONSTRAINT legal_entities_address_id_fkey FOREIGN KEY (address_id) REFERENCES core.addresses(address_id) ON DELETE RESTRICT,
	CONSTRAINT legal_entities_country_id_fkey FOREIGN KEY (country_id) REFERENCES core.countries(country_id) ON DELETE RESTRICT
);
COMMENT ON TABLE core.legal_entities IS 'Довідник юридичних осіб (імпортери, виробники, постачальники).';

-- Column comments

COMMENT ON COLUMN core.legal_entities.full_name_ukr IS 'Повна офіційна назва юридичної особи українською.';
COMMENT ON COLUMN core.legal_entities.short_name_ukr IS 'Скорочена назва юридичної особи українською.';
COMMENT ON COLUMN core.legal_entities.country_id IS 'Зовнішній ключ до країни реєстрації юр. особи.';
COMMENT ON COLUMN core.legal_entities.edrpou IS 'Код ЄДРПОУ.';
COMMENT ON COLUMN core.legal_entities.vat_number IS 'Індивідуальний податковий номер.';

-- Permissions

ALTER TABLE core.legal_entities OWNER TO postgres;
GRANT ALL ON TABLE core.legal_entities TO postgres;

-- product_data.assembly_components визначення

-- Drop table

-- DROP TABLE product_data.assembly_components;

CREATE TABLE product_data.assembly_components (
	component_id serial4 NOT NULL, -- Унікальний ідентифікатор зв'язку компонента (PK).
	system_id int4 NOT NULL -- Зовнішній ключ до product_systems. Видалення моделі каскадно видаляє цей зв'язок (ON DELETE CASCADE).,
	unit_code_id int4 NOT NULL, -- Зовнішній ключ до unit_codes. Видалення зв'язку каскадно видаляє маркування блоку, якщо воно більше ніде не використовується (ON DELETE CASCADE).
	CONSTRAINT assembly_components_pkey PRIMARY KEY (component_id),
	CONSTRAINT uq_assembly_component UNIQUE (system_id, unit_code_id)
);
COMMENT ON TABLE product_data.assembly_components IS 'Зв''язна таблиця.';

-- Column comments

COMMENT ON COLUMN product_data.assembly_components.component_id IS 'Унікальний ідентифікатор зв''язку компонента (PK).';
COMMENT ON COLUMN product_data.assembly_components.system_id IS 'Зовнішній ключ до product_systems. Видалення моделі каскадно видаляє цей зв''язок (ON DELETE CASCADE).';
COMMENT ON COLUMN product_data.assembly_components.unit_code_id IS 'Зовнішній ключ до unit_codes. Видалення зв''язку каскадно видаляє маркування блоку, якщо воно більше ніде не використовується (ON DELETE CASCADE).';

-- Table Triggers

create trigger delete_orphan_unit_code_tr after
delete
    on
    product_data.assembly_components for each row execute function product_data.clean_unit_codes();

COMMENT ON TRIGGER delete_orphan_unit_code_tr ON product_data.assembly_components IS 'Автоматично запускає очищення unit_codes після видалення зв''язку компонента.';

-- Permissions

ALTER TABLE product_data.assembly_components OWNER TO postgres;
GRANT ALL ON TABLE product_data.assembly_components TO postgres;


-- product_data.filters_system визначення

-- Drop table

-- DROP TABLE product_data.filters_system;

CREATE TABLE product_data.filters_system (
	filter_system_id serial4 NOT NULL,
	system_id int4 NOT NULL, -- Посилання на модель системи.
	filter_type_id int4 NOT NULL, -- Посилання на тип фільтра.
	CONSTRAINT filters_system_pkey PRIMARY KEY (filter_system_id),
	CONSTRAINT filters_system_system_id_filter_type_id_key UNIQUE (system_id, filter_type_id)
);
COMMENT ON TABLE product_data.filters_system IS 'Зв''язна таблиця: Які типи фільтрів (filter_type_id) використовуються в конкретній моделі (system_id).';

-- Column comments

COMMENT ON COLUMN product_data.filters_system.system_id IS 'Посилання на модель системи.';
COMMENT ON COLUMN product_data.filters_system.filter_type_id IS 'Посилання на тип фільтра.';

-- Permissions

ALTER TABLE product_data.filters_system OWNER TO postgres;
GRANT ALL ON TABLE product_data.filters_system TO postgres;


-- product_data.noise_lookup визначення

-- Drop table

-- DROP TABLE product_data.noise_lookup;

CREATE TABLE product_data.noise_lookup (
	noise_lookup_id serial4 NOT NULL,
	value_hi numeric(10, 2) NULL, -- Рівень шуму (Hi/Max). Використовується для зовнішнього блоку.
	value_mi numeric(10, 2) NULL,
	value_lo numeric(10, 2) NULL, -- Рівень шуму (Lo/Standard).
	value_sl numeric(10, 2) NULL,
	unit_id int4 NOT NULL,
	unit_type_id int4 NOT NULL,
	CONSTRAINT check_at_least_one_value CHECK (((value_hi IS NOT NULL) OR (value_mi IS NOT NULL) OR (value_lo IS NOT NULL) OR (value_sl IS NOT NULL))),
	CONSTRAINT noise_lookup_pkey PRIMARY KEY (noise_lookup_id)
);
COMMENT ON TABLE product_data.noise_lookup IS 'Довідник унікальних комбінацій рівнів шуму (дБ) для різних блоків.';

-- Column comments

COMMENT ON COLUMN product_data.noise_lookup.value_hi IS 'Рівень шуму (Hi/Max). Використовується для зовнішнього блоку.';
COMMENT ON COLUMN product_data.noise_lookup.value_lo IS 'Рівень шуму (Lo/Standard).';

-- Permissions

ALTER TABLE product_data.noise_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_data.noise_lookup TO postgres;


-- product_data.power_connections визначення

-- Drop table

-- DROP TABLE product_data.power_connections;

CREATE TABLE product_data.power_connections (
	power_connection_id serial4 NOT NULL,
	system_id int4 NOT NULL, -- Модель/система.
	unit_type_id int4 NOT NULL, -- Тип блоку, до якого підключається живлення (наприклад, Внутрішній блок).
	CONSTRAINT power_connections_pkey PRIMARY KEY (power_connection_id),
	CONSTRAINT uq_power_connection UNIQUE (system_id, unit_type_id)
);
COMMENT ON TABLE product_data.power_connections IS 'Зв''язна таблиця: підключення живлення.';

-- Column comments

COMMENT ON COLUMN product_data.power_connections.system_id IS 'Модель/система.';
COMMENT ON COLUMN product_data.power_connections.unit_type_id IS 'Тип блоку, до якого підключається живлення (наприклад, Внутрішній блок).';

-- Permissions

ALTER TABLE product_data.power_connections OWNER TO postgres;
GRANT ALL ON TABLE product_data.power_connections TO postgres;


-- product_data.product_systems визначення

-- Drop table

-- DROP TABLE product_data.product_systems;

CREATE TABLE product_data.product_systems (
	system_id serial4 NOT NULL, -- Усі розміри (фізичні та монтажні) тепер зберігаються в EAV-таблиці product_data.system_physical_params.
	lookup_id int4 NOT NULL, -- Зовнішній ключ до product_meta.product_lookup, що визначає метадані (Бренд, Серія, Імпортер, Виробник). Захищено ON DELETE RESTRICT.
	area_lookup_id int4 NULL, -- Зовнішній ключ до довідника рекомендованої площі.
	cooling_capacity_id int4 NULL, -- Зовнішній ключ до BTU-специфікації для режиму Охолодження.
	warranty_lookup_id int4 NULL, -- Зовнішній ключ до довідника гарантійного терміну.
	conditioner_type_id int4 NULL, -- Зовнішній ключ до типу встановлення кондиціонера (настінний, касетний, тощо).
	power_cable_id int4 NULL,
	interconnection_cable_id int4 NULL,
	max_power_consumption_id int4 NULL,
	max_current_consumption_id int4 NULL,
	cooling_power_watt_id int4 NULL, -- FK до capacity_lookup: Потужність охолодження (Вт).
	heating_capacity_id int4 NULL, -- FK до capacity_lookup: Теплова потужність (BTU/h).
	heating_power_watt_id int4 NULL,
	nominal_power_consumption_cooling_id int4 NULL, -- FK до capacity_lookup: Ном. споживана потужність (охол).
	nominal_current_cooling_id int4 NULL, -- FK до max_current_lookup: Номінальний струм (охол).
	nominal_power_consumption_heating_id int4 NULL,
	nominal_current_heating_id int4 NULL,
	indoor_unit_airflow_id int4 NULL, -- FK до air_flow_lookup: Витрата повітря внутрішнього блоку.
	indoor_noise_id int4 NULL, -- Зовнішній ключ до noise_lookup для шуму внутрішнього блоку.
	outdoor_noise_id int4 NULL, -- Зовнішній ключ до noise_lookup для шуму зовнішнього блоку.
	outdoor_airflow_id int4 NULL, -- Зовнішній ключ до air_flow_lookup для витрати повітря зовнішнього блоку.
	indoor_weight_id int4 NULL,
	outdoor_weight_id int4 NULL,
	indoor_size_id int4 NULL, -- Зовнішній ключ до розмірів корпусу внутрішнього блоку.
	indoor_pack_size_id int4 NULL,
	outdoor_size_id int4 NULL,
	outdoor_pack_size_id int4 NULL, -- Зовнішній ключ до розмірів упаковки зовнішнього блоку.
	outdoor_mounting_size_id int4 NULL,
	compressor_lookup_id int4 NULL, -- Зовнішній ключ до довідника характеристик компресора (виробник, тип, мастило).
	oil_volume_id int4 NULL, -- Зовнішній ключ до довідника обсягу мастила.
	refrigerant_id int4 NULL, -- Зовнішній ключ до довідника характеристик холодоагентів.
	ref_weight_id int4 NULL, -- Зовнішній ключ до довідника ваги холодоагенту (заводська заправка).
	design_pressure_id int4 NULL, -- Зовнішній ключ до довідника розрахункового тиску.
	piping_set_id int4 NULL, -- Зовнішній ключ до набору діаметрів рідинної/газової труби.
	drain_diameter_id int4 NULL, -- Зовнішній ключ до standard_diameter_lookup для діаметра дренажної труби.
	piping_limits_id int4 NULL, -- Зовнішній ключ до довідника монтажних обмежень трубопроводу.
	breaker_lookup_id int4 NULL, -- Зовнішній ключ до довідника вимог до автоматичного вимикача.
	temp_ranges_set_id int4 NULL, -- Зовнішній ключ до набору температурних діапазонів (temp_ranges_set_lookup).
	outdoor_ip_rating_id int4 NULL, -- Посилання на IP-рейтинг зовнішнього блоку.
	mobile_app_id int4 NULL, -- Посилання на мобільний додаток, який використовується для керування Wi-Fi.
	CONSTRAINT product_systems_pkey PRIMARY KEY (system_id)
);
COMMENT ON TABLE product_data.product_systems IS 'Головний довідник зібраних моделей.';

-- Column comments

COMMENT ON COLUMN product_data.product_systems.system_id IS 'Усі розміри (фізичні та монтажні) тепер зберігаються в EAV-таблиці product_data.system_physical_params.';
COMMENT ON COLUMN product_data.product_systems.lookup_id IS 'Зовнішній ключ до product_meta.product_lookup, що визначає метадані (Бренд, Серія, Імпортер, Виробник). Захищено ON DELETE RESTRICT.';
COMMENT ON COLUMN product_data.product_systems.area_lookup_id IS 'Зовнішній ключ до довідника рекомендованої площі.';
COMMENT ON COLUMN product_data.product_systems.cooling_capacity_id IS 'Зовнішній ключ до BTU-специфікації для режиму Охолодження.';
COMMENT ON COLUMN product_data.product_systems.warranty_lookup_id IS 'Зовнішній ключ до довідника гарантійного терміну.';
COMMENT ON COLUMN product_data.product_systems.conditioner_type_id IS 'Зовнішній ключ до типу встановлення кондиціонера (настінний, касетний, тощо).';
COMMENT ON COLUMN product_data.product_systems.cooling_power_watt_id IS 'FK до capacity_lookup: Потужність охолодження (Вт).';
COMMENT ON COLUMN product_data.product_systems.heating_capacity_id IS 'FK до capacity_lookup: Теплова потужність (BTU/h).';
COMMENT ON COLUMN product_data.product_systems.nominal_power_consumption_cooling_id IS 'FK до capacity_lookup: Ном. споживана потужність (охол).';
COMMENT ON COLUMN product_data.product_systems.nominal_current_cooling_id IS 'FK до max_current_lookup: Номінальний струм (охол).';
COMMENT ON COLUMN product_data.product_systems.indoor_unit_airflow_id IS 'FK до air_flow_lookup: Витрата повітря внутрішнього блоку.';
COMMENT ON COLUMN product_data.product_systems.indoor_noise_id IS 'Зовнішній ключ до noise_lookup для шуму внутрішнього блоку.';
COMMENT ON COLUMN product_data.product_systems.outdoor_noise_id IS 'Зовнішній ключ до noise_lookup для шуму зовнішнього блоку.';
COMMENT ON COLUMN product_data.product_systems.outdoor_airflow_id IS 'Зовнішній ключ до air_flow_lookup для витрати повітря зовнішнього блоку.';
COMMENT ON COLUMN product_data.product_systems.indoor_size_id IS 'Зовнішній ключ до розмірів корпусу внутрішнього блоку.';
COMMENT ON COLUMN product_data.product_systems.outdoor_pack_size_id IS 'Зовнішній ключ до розмірів упаковки зовнішнього блоку.';
COMMENT ON COLUMN product_data.product_systems.compressor_lookup_id IS 'Зовнішній ключ до довідника характеристик компресора (виробник, тип, мастило).';
COMMENT ON COLUMN product_data.product_systems.oil_volume_id IS 'Зовнішній ключ до довідника обсягу мастила.';
COMMENT ON COLUMN product_data.product_systems.refrigerant_id IS 'Зовнішній ключ до довідника характеристик холодоагентів.';
COMMENT ON COLUMN product_data.product_systems.ref_weight_id IS 'Зовнішній ключ до довідника ваги холодоагенту (заводська заправка).';
COMMENT ON COLUMN product_data.product_systems.design_pressure_id IS 'Зовнішній ключ до довідника розрахункового тиску.';
COMMENT ON COLUMN product_data.product_systems.piping_set_id IS 'Зовнішній ключ до набору діаметрів рідинної/газової труби.';
COMMENT ON COLUMN product_data.product_systems.drain_diameter_id IS 'Зовнішній ключ до standard_diameter_lookup для діаметра дренажної труби.';
COMMENT ON COLUMN product_data.product_systems.piping_limits_id IS 'Зовнішній ключ до довідника монтажних обмежень трубопроводу.';
COMMENT ON COLUMN product_data.product_systems.breaker_lookup_id IS 'Зовнішній ключ до довідника вимог до автоматичного вимикача.';
COMMENT ON COLUMN product_data.product_systems.temp_ranges_set_id IS 'Зовнішній ключ до набору температурних діапазонів (temp_ranges_set_lookup).';
COMMENT ON COLUMN product_data.product_systems.outdoor_ip_rating_id IS 'Посилання на IP-рейтинг зовнішнього блоку.';
COMMENT ON COLUMN product_data.product_systems.mobile_app_id IS 'Посилання на мобільний додаток, який використовується для керування Wi-Fi.';

-- Permissions

ALTER TABLE product_data.product_systems OWNER TO postgres;
GRANT ALL ON TABLE product_data.product_systems TO postgres;


-- product_data.system_efficiency_data визначення

-- Drop table

-- DROP TABLE product_data.system_efficiency_data;

CREATE TABLE product_data.system_efficiency_data (
	system_efficiency_id serial4 NOT NULL,
	system_id int4 NOT NULL,
	coefficient_type varchar(10) NOT NULL,
	efficiency_lookup_id int4 NOT NULL,
	efficiency_class_id int4 NULL,
	CONSTRAINT system_efficiency_data_pkey PRIMARY KEY (system_efficiency_id),
	CONSTRAINT uq_system_coefficient UNIQUE (system_id, coefficient_type)
);
COMMENT ON TABLE product_data.system_efficiency_data IS 'Зв''язна таблиця для коефіцієнтів енергоефективності.';

-- Permissions

ALTER TABLE product_data.system_efficiency_data OWNER TO postgres;
GRANT ALL ON TABLE product_data.system_efficiency_data TO postgres;


-- product_data.system_features визначення

-- Drop table

-- DROP TABLE product_data.system_features;

CREATE TABLE product_data.system_features (
	system_feature_id serial4 NOT NULL,
	system_id int4 NOT NULL, -- Посилання на модель системи.
	feature_type_id int4 NOT NULL, -- Посилання на функцію/особливість з довідника.
	CONSTRAINT system_features_pkey PRIMARY KEY (system_feature_id),
	CONSTRAINT system_features_system_id_feature_type_id_key UNIQUE (system_id, feature_type_id)
);
COMMENT ON TABLE product_data.system_features IS 'Зв''язна таблиця для відображення, які функції та особливості доступні в конкретній моделі.';

-- Column comments

COMMENT ON COLUMN product_data.system_features.system_id IS 'Посилання на модель системи.';
COMMENT ON COLUMN product_data.system_features.feature_type_id IS 'Посилання на функцію/особливість з довідника.';

-- Permissions

ALTER TABLE product_data.system_features OWNER TO postgres;
GRANT ALL ON TABLE product_data.system_features TO postgres;


-- product_data.system_modes визначення

-- Drop table

-- DROP TABLE product_data.system_modes;

CREATE TABLE product_data.system_modes (
	system_mode_id serial4 NOT NULL,
	system_id int4 NOT NULL, -- Зовнішній ключ до моделі. Видалення моделі видаляє зв'язок (CASCADE).
	mode_id int4 NOT NULL -- Зовнішній ключ до режиму. Режим не можна видалити, якщо він використовується (RESTRICT).,
	CONSTRAINT system_modes_pkey PRIMARY KEY (system_mode_id),
	CONSTRAINT uq_system_mode UNIQUE (system_id, mode_id)
);
COMMENT ON TABLE product_data.system_modes IS 'Зв''язна таблиця: перелік доступних режимів.';

-- Column comments

COMMENT ON COLUMN product_data.system_modes.system_id IS 'Зовнішній ключ до моделі. Видалення моделі видаляє зв''язок (CASCADE).';
COMMENT ON COLUMN product_data.system_modes.mode_id IS 'Зовнішній ключ до режиму. Режим не можна видалити, якщо він використовується (RESTRICT).';

-- Permissions

ALTER TABLE product_data.system_modes OWNER TO postgres;
GRANT ALL ON TABLE product_data.system_modes TO postgres;


-- product_data.system_power_supply визначення

-- Drop table

-- DROP TABLE product_data.system_power_supply;

CREATE TABLE product_data.system_power_supply (
	system_power_supply_id serial4 NOT NULL,
	system_id int4 NOT NULL,
	unit_type_id int4 NOT NULL,
	power_param_id int4 NOT NULL,
	CONSTRAINT system_power_supply_pkey PRIMARY KEY (system_power_supply_id),
	CONSTRAINT uq_system_power_unit UNIQUE (system_id, unit_type_id)
);
COMMENT ON TABLE product_data.system_power_supply IS 'Зв''язна таблиця: параметри живлення.';

-- Permissions

ALTER TABLE product_data.system_power_supply OWNER TO postgres;
GRANT ALL ON TABLE product_data.system_power_supply TO postgres;


-- product_data.unit_codes визначення

-- Drop table

-- DROP TABLE product_data.unit_codes;

CREATE TABLE product_data.unit_codes (
	unit_code_id serial4 NOT NULL, -- Унікальний ідентифікатор маркування (PK).
	unit_code varchar(100) NOT NULL, -- Повне маркування блоку, як вказано виробником (наприклад, NCI07EHMIw1eu).
	unit_type_id int4 NOT NULL, -- Зовнішній ключ до unit_types, що визначає тип блоку.
	CONSTRAINT unit_codes_pkey PRIMARY KEY (unit_code_id),
	CONSTRAINT unit_codes_unit_code_key UNIQUE (unit_code)
);
COMMENT ON TABLE product_data.unit_codes IS 'Головний довідник усіх унікальних маркувань блоків.';

-- Column comments

COMMENT ON COLUMN product_data.unit_codes.unit_code_id IS 'Унікальний ідентифікатор маркування (PK).';
COMMENT ON COLUMN product_data.unit_codes.unit_code IS 'Повне маркування блоку, як вказано виробником (наприклад, NCI07EHMIw1eu).';
COMMENT ON COLUMN product_data.unit_codes.unit_type_id IS 'Зовнішній ключ до unit_types, що визначає тип блоку.';

-- Permissions

ALTER TABLE product_data.unit_codes OWNER TO postgres;
GRANT ALL ON TABLE product_data.unit_codes TO postgres;


-- product_data.assembly_components зовнішні ключі

ALTER TABLE product_data.assembly_components ADD CONSTRAINT assembly_components_system_id_fkey FOREIGN KEY (system_id) REFERENCES product_data.product_systems(system_id) ON DELETE CASCADE;
ALTER TABLE product_data.assembly_components ADD CONSTRAINT assembly_components_unit_code_id_fkey FOREIGN KEY (unit_code_id) REFERENCES product_data.unit_codes(unit_code_id) ON DELETE CASCADE;


-- product_data.filters_system зовнішні ключі

ALTER TABLE product_data.filters_system ADD CONSTRAINT filters_system_filter_type_id_fkey FOREIGN KEY (filter_type_id) REFERENCES product_meta.filter_types(filter_type_id) ON DELETE RESTRICT;
ALTER TABLE product_data.filters_system ADD CONSTRAINT filters_system_system_id_fkey FOREIGN KEY (system_id) REFERENCES product_data.product_systems(system_id) ON DELETE CASCADE;


-- product_data.noise_lookup зовнішні ключі

ALTER TABLE product_data.noise_lookup ADD CONSTRAINT noise_lookup_unit_id_fkey FOREIGN KEY (unit_id) REFERENCES product_meta.units(unit_id);
ALTER TABLE product_data.noise_lookup ADD CONSTRAINT noise_lookup_unit_type_id_fkey FOREIGN KEY (unit_type_id) REFERENCES product_meta.unit_types(unit_type_id);


-- product_data.power_connections зовнішні ключі

ALTER TABLE product_data.power_connections ADD CONSTRAINT power_connections_system_id_fkey FOREIGN KEY (system_id) REFERENCES product_data.product_systems(system_id) ON DELETE CASCADE;
ALTER TABLE product_data.power_connections ADD CONSTRAINT power_connections_unit_type_id_fkey FOREIGN KEY (unit_type_id) REFERENCES product_meta.unit_types(unit_type_id) ON DELETE RESTRICT;


-- product_data.product_systems зовнішні ключі

ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_area_lookup_id_fkey FOREIGN KEY (area_lookup_id) REFERENCES product_meta.area_lookup(area_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_breaker_fkey FOREIGN KEY (breaker_lookup_id) REFERENCES product_meta.breaker_requirements_lookup(breaker_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_compressor_fkey FOREIGN KEY (compressor_lookup_id) REFERENCES product_meta.compressor_lookup(compressor_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_conditioner_type_id_fkey FOREIGN KEY (conditioner_type_id) REFERENCES product_meta.conditioner_types(conditioner_type_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_cooling_capacity_id_fkey FOREIGN KEY (cooling_capacity_id) REFERENCES product_meta.capacity_lookup(capacity_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_cooling_power_watt_id_fkey FOREIGN KEY (cooling_power_watt_id) REFERENCES product_meta.capacity_lookup(capacity_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_design_pressure_fkey FOREIGN KEY (design_pressure_id) REFERENCES product_meta.design_pressure_lookup(pressure_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_drain_diameter_fkey FOREIGN KEY (drain_diameter_id) REFERENCES product_meta.standard_diameter_lookup(diameter_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_heating_capacity_id_fkey FOREIGN KEY (heating_capacity_id) REFERENCES product_meta.capacity_lookup(capacity_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_heating_power_watt_id_fkey FOREIGN KEY (heating_power_watt_id) REFERENCES product_meta.capacity_lookup(capacity_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_indoor_airflow_id_fkey FOREIGN KEY (indoor_unit_airflow_id) REFERENCES product_meta.air_flow_lookup(air_flow_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_indoor_noise_id_fkey FOREIGN KEY (indoor_noise_id) REFERENCES product_data.noise_lookup(noise_lookup_id);
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_indoor_pack_size_fkey FOREIGN KEY (indoor_pack_size_id) REFERENCES product_meta.pack_size_lookup(pack_size_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_indoor_size_fkey FOREIGN KEY (indoor_size_id) REFERENCES product_meta.size_lookup(size_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_interconnection_cable_id_fkey FOREIGN KEY (interconnection_cable_id) REFERENCES product_meta.cable_lookup(cable_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_lookup_id_fkey FOREIGN KEY (lookup_id) REFERENCES product_meta.product_lookup(lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_max_current_consumption_id_fkey FOREIGN KEY (max_current_consumption_id) REFERENCES product_meta.max_current_lookup(max_current_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_max_power_consumption_id_fkey FOREIGN KEY (max_power_consumption_id) REFERENCES product_meta.max_power_lookup(max_power_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_mobile_app_id_fkey FOREIGN KEY (mobile_app_id) REFERENCES product_meta.app_lookup(app_id);
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_nominal_cc_heat_id_fkey FOREIGN KEY (nominal_current_heating_id) REFERENCES product_meta.max_current_lookup(max_current_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_nominal_cc_id_fkey FOREIGN KEY (nominal_current_cooling_id) REFERENCES product_meta.max_current_lookup(max_current_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_nominal_pcc_heat_id_fkey FOREIGN KEY (nominal_power_consumption_heating_id) REFERENCES product_meta.capacity_lookup(capacity_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_nominal_pcc_id_fkey FOREIGN KEY (nominal_power_consumption_cooling_id) REFERENCES product_meta.capacity_lookup(capacity_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_oil_volume_fkey FOREIGN KEY (oil_volume_id) REFERENCES product_meta.oil_volume_lookup(oil_volume_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_outdoor_airflow_fkey FOREIGN KEY (outdoor_airflow_id) REFERENCES product_meta.air_flow_lookup(air_flow_lookup_id);
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_outdoor_ip_rating_id_fkey FOREIGN KEY (outdoor_ip_rating_id) REFERENCES product_meta.ip_rating_lookup(ip_rating_id);
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_outdoor_mount_fkey FOREIGN KEY (outdoor_mounting_size_id) REFERENCES product_meta.outdoor_mounting_lookup(outdoor_mounting_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_outdoor_noise_id_fkey FOREIGN KEY (outdoor_noise_id) REFERENCES product_data.noise_lookup(noise_lookup_id);
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_outdoor_pack_size_fkey FOREIGN KEY (outdoor_pack_size_id) REFERENCES product_meta.pack_size_lookup(pack_size_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_outdoor_size_fkey FOREIGN KEY (outdoor_size_id) REFERENCES product_meta.size_lookup(size_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_piping_limits_fkey FOREIGN KEY (piping_limits_id) REFERENCES product_meta.piping_limits_lookup(limit_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_piping_set_fkey FOREIGN KEY (piping_set_id) REFERENCES product_meta.piping_set_lookup(piping_set_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_power_cable_id_fkey FOREIGN KEY (power_cable_id) REFERENCES product_meta.cable_lookup(cable_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_ref_weight_fkey FOREIGN KEY (ref_weight_id) REFERENCES product_meta.refrigerant_weight_lookup(ref_weight_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_refrigerant_fkey FOREIGN KEY (refrigerant_id) REFERENCES product_meta.refrigerant_lookup(refrigerant_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_temp_set_fkey FOREIGN KEY (temp_ranges_set_id) REFERENCES product_meta.temp_ranges_set_lookup(temp_set_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT product_systems_warranty_lookup_id_fkey FOREIGN KEY (warranty_lookup_id) REFERENCES product_meta.warranty_lookup(warranty_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.product_systems ADD CONSTRAINT ps_indoor_weight_fkey FOREIGN KEY (indoor_weight_id) REFERENCES product_meta.weight_lookup(weight_lookup_id);
ALTER TABLE product_data.product_systems ADD CONSTRAINT ps_outdoor_weight_fkey FOREIGN KEY (outdoor_weight_id) REFERENCES product_meta.weight_lookup(weight_lookup_id);


-- product_data.system_efficiency_data зовнішні ключі

ALTER TABLE product_data.system_efficiency_data ADD CONSTRAINT system_efficiency_data_class_id_fkey FOREIGN KEY (efficiency_class_id) REFERENCES product_meta.efficiency_class_lookup(efficiency_class_id) ON DELETE RESTRICT;
ALTER TABLE product_data.system_efficiency_data ADD CONSTRAINT system_efficiency_data_lookup_id_fkey FOREIGN KEY (efficiency_lookup_id) REFERENCES product_meta.efficiency_lookup(efficiency_lookup_id) ON DELETE RESTRICT;
ALTER TABLE product_data.system_efficiency_data ADD CONSTRAINT system_efficiency_data_system_id_fkey FOREIGN KEY (system_id) REFERENCES product_data.product_systems(system_id) ON DELETE CASCADE;


-- product_data.system_features зовнішні ключі

ALTER TABLE product_data.system_features ADD CONSTRAINT system_features_feature_type_id_fkey FOREIGN KEY (feature_type_id) REFERENCES product_meta.feature_types(feature_type_id) ON DELETE RESTRICT;
ALTER TABLE product_data.system_features ADD CONSTRAINT system_features_system_id_fkey FOREIGN KEY (system_id) REFERENCES product_data.product_systems(system_id) ON DELETE CASCADE;


-- product_data.system_modes зовнішні ключі

ALTER TABLE product_data.system_modes ADD CONSTRAINT system_modes_mode_id_fkey FOREIGN KEY (mode_id) REFERENCES product_meta.operation_modes(mode_id) ON DELETE RESTRICT;
ALTER TABLE product_data.system_modes ADD CONSTRAINT system_modes_system_id_fkey FOREIGN KEY (system_id) REFERENCES product_data.product_systems(system_id) ON DELETE CASCADE;


-- product_data.system_power_supply зовнішні ключі

ALTER TABLE product_data.system_power_supply ADD CONSTRAINT system_power_supply_power_param_id_fkey FOREIGN KEY (power_param_id) REFERENCES product_meta.power_params_lookup(power_param_id) ON DELETE RESTRICT;
ALTER TABLE product_data.system_power_supply ADD CONSTRAINT system_power_supply_system_id_fkey FOREIGN KEY (system_id) REFERENCES product_data.product_systems(system_id) ON DELETE CASCADE;
ALTER TABLE product_data.system_power_supply ADD CONSTRAINT system_power_supply_unit_type_id_fkey FOREIGN KEY (unit_type_id) REFERENCES product_meta.unit_types(unit_type_id) ON DELETE RESTRICT;


-- product_data.unit_codes зовнішні ключі

ALTER TABLE product_data.unit_codes ADD CONSTRAINT unit_codes_unit_type_id_fkey FOREIGN KEY (unit_type_id) REFERENCES product_meta.unit_types(unit_type_id) ON DELETE RESTRICT;

-- product_meta.app_lookup визначення

-- Drop table

-- DROP TABLE product_meta.app_lookup;

CREATE TABLE product_meta.app_lookup (
	app_id serial4 NOT NULL,
	app_name varchar(50) NOT NULL, -- Назва мобільного додатка.
	manufacturer_ukr varchar(100) NULL,
	description_ukr text NULL,
	CONSTRAINT app_lookup_app_name_key UNIQUE (app_name),
	CONSTRAINT app_lookup_pkey PRIMARY KEY (app_id)
);
COMMENT ON TABLE product_meta.app_lookup IS 'Довідник назв мобільних додатків для керування системою.';

-- Column comments

COMMENT ON COLUMN product_meta.app_lookup.app_name IS 'Назва мобільного додатка.';

-- Permissions

ALTER TABLE product_meta.app_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.app_lookup TO postgres;


-- product_meta.brands визначення

-- Drop table

-- DROP TABLE product_meta.brands;

CREATE TABLE product_meta.brands (
	brand_id serial4 NOT NULL,
	brand_name_ukr varchar(100) NOT NULL, -- Назва бренду українською.
	keywords text NULL,
	CONSTRAINT brands_name_key UNIQUE (brand_name_ukr),
	CONSTRAINT brands_pkey PRIMARY KEY (brand_id)
);
COMMENT ON TABLE product_meta.brands IS 'Універсальний довідник брендів.';

-- Column comments

COMMENT ON COLUMN product_meta.brands.brand_name_ukr IS 'Назва бренду українською.';

-- Permissions

ALTER TABLE product_meta.brands OWNER TO postgres;
GRANT ALL ON TABLE product_meta.brands TO postgres;


-- product_meta.business_lines визначення

-- Drop table

-- DROP TABLE product_meta.business_lines;

CREATE TABLE product_meta.business_lines (
	business_line_id serial4 NOT NULL,
	line_name_ukr varchar(100) NOT NULL, -- Назва бізнес-лінії українською.
	line_name_eng varchar(100) NULL,
	CONSTRAINT business_lines_line_name_ukr_unique UNIQUE (line_name_ukr),
	CONSTRAINT business_lines_pkey PRIMARY KEY (business_line_id)
);
COMMENT ON TABLE product_meta.business_lines IS 'Довідник для класифікації продуктів за бізнес-лінією (побутова, напівпромислова, промислова).';

-- Column comments

COMMENT ON COLUMN product_meta.business_lines.line_name_ukr IS 'Назва бізнес-лінії українською.';

-- Permissions

ALTER TABLE product_meta.business_lines OWNER TO postgres;
GRANT ALL ON TABLE product_meta.business_lines TO postgres;


-- product_meta.compressor_control_type визначення

-- Drop table

-- DROP TABLE product_meta.compressor_control_type;

CREATE TABLE product_meta.compressor_control_type (
	control_type_id serial4 NOT NULL,
	type_name_ukr varchar(50) NOT NULL,
	CONSTRAINT compressor_control_type_pkey PRIMARY KEY (control_type_id),
	CONSTRAINT uix_control_type_name UNIQUE (type_name_ukr)
);
COMMENT ON TABLE product_meta.compressor_control_type IS 'Довідник типів управління компресором (інверторний/неінверторний).';

-- Permissions

ALTER TABLE product_meta.compressor_control_type OWNER TO postgres;
GRANT ALL ON TABLE product_meta.compressor_control_type TO postgres;


-- product_meta.compressor_manuf_lookup визначення

-- Drop table

-- DROP TABLE product_meta.compressor_manuf_lookup;

CREATE TABLE product_meta.compressor_manuf_lookup (
	manuf_id serial4 NOT NULL,
	name_ukr varchar(100) NOT NULL,
	description_eng varchar(100) NULL,
	CONSTRAINT compressor_manuf_lookup_pkey PRIMARY KEY (manuf_id),
	CONSTRAINT uix_manuf_name UNIQUE (name_ukr)
);
COMMENT ON TABLE product_meta.compressor_manuf_lookup IS 'Довідник виробників компресорів.';

-- Permissions

ALTER TABLE product_meta.compressor_manuf_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.compressor_manuf_lookup TO postgres;


-- product_meta.compressor_work_principle визначення

-- Drop table

-- DROP TABLE product_meta.compressor_work_principle;

CREATE TABLE product_meta.compressor_work_principle (
	principle_id serial4 NOT NULL,
	principle_name_ukr varchar(50) NOT NULL,
	CONSTRAINT compressor_work_principle_pkey PRIMARY KEY (principle_id),
	CONSTRAINT uix_principle_name UNIQUE (principle_name_ukr)
);
COMMENT ON TABLE product_meta.compressor_work_principle IS 'Довідник принципів роботи компресора (роторний, спіральний, поршневий).';

-- Permissions

ALTER TABLE product_meta.compressor_work_principle OWNER TO postgres;
GRANT ALL ON TABLE product_meta.compressor_work_principle TO postgres;


-- product_meta.conditioner_types визначення

-- Drop table

-- DROP TABLE product_meta.conditioner_types;

CREATE TABLE product_meta.conditioner_types (
	conditioner_type_id serial4 NOT NULL, -- Унікальний ідентифікатор типу (PK).
	type_name_ukr varchar(100) NOT NULL, -- Назва типу
	short_name_ukr varchar(10) NOT NULL, -- Скорочена назва
	type_name_eng varchar(100) NULL, -- Назва типу англійською.
	description_ukr text NULL, -- Абрівеатура
	description_eng text NULL,
	series_type_id int4 NULL,
	CONSTRAINT conditioner_types_pkey PRIMARY KEY (conditioner_type_id),
	CONSTRAINT uq_conditioner_type_short UNIQUE (short_name_ukr),
	CONSTRAINT uq_conditioner_type_ukr UNIQUE (type_name_ukr)
);
COMMENT ON TABLE product_meta.conditioner_types IS 'Довідник типів кондиціонерів (наприклад, Спліт-система, Мульти-спліт, Канальний).';

-- Column comments

COMMENT ON COLUMN product_meta.conditioner_types.conditioner_type_id IS 'Унікальний ідентифікатор типу (PK).';
COMMENT ON COLUMN product_meta.conditioner_types.type_name_ukr IS 'Назва типу';
COMMENT ON COLUMN product_meta.conditioner_types.short_name_ukr IS 'Скорочена назва';
COMMENT ON COLUMN product_meta.conditioner_types.type_name_eng IS 'Назва типу англійською.';
COMMENT ON COLUMN product_meta.conditioner_types.description_ukr IS 'Абрівеатура';

-- Permissions

ALTER TABLE product_meta.conditioner_types OWNER TO postgres;
GRANT ALL ON TABLE product_meta.conditioner_types TO postgres;


-- product_meta.conversion_categories визначення

-- Drop table

-- DROP TABLE product_meta.conversion_categories;

CREATE TABLE product_meta.conversion_categories (
	category_id serial4 NOT NULL, -- Унікальний ідентифікатор категорії.
	category_name_eng varchar(50) NOT NULL, -- Назва категорії англійською (технічний ідентифікатор).
	category_name_ukr varchar(50) NOT NULL, -- Назва категорії українською (для відображення).
	CONSTRAINT conversion_categories_category_name_eng_key UNIQUE (category_name_eng),
	CONSTRAINT conversion_categories_category_name_ukr_key UNIQUE (category_name_ukr),
	CONSTRAINT conversion_categories_pkey PRIMARY KEY (category_id)
);
COMMENT ON TABLE product_meta.conversion_categories IS 'Довідник унікальних категорій фізичних величин, що використовуються для перерахунку.';

-- Column comments

COMMENT ON COLUMN product_meta.conversion_categories.category_id IS 'Унікальний ідентифікатор категорії.';
COMMENT ON COLUMN product_meta.conversion_categories.category_name_eng IS 'Назва категорії англійською (технічний ідентифікатор).';
COMMENT ON COLUMN product_meta.conversion_categories.category_name_ukr IS 'Назва категорії українською (для відображення).';

-- Permissions

ALTER TABLE product_meta.conversion_categories OWNER TO postgres;
GRANT ALL ON TABLE product_meta.conversion_categories TO postgres;


-- product_meta.efficiency_class_lookup визначення

-- Drop table

-- DROP TABLE product_meta.efficiency_class_lookup;

CREATE TABLE product_meta.efficiency_class_lookup (
	efficiency_class_id serial4 NOT NULL, -- Унікальний ідентифікатор класу (PK).
	class_name varchar(10) NOT NULL, -- Назва класу (наприклад, A+++).
	description_ukr varchar(255) NULL,
	CONSTRAINT efficiency_class_lookup_pkey PRIMARY KEY (efficiency_class_id),
	CONSTRAINT uq_efficiency_class_name UNIQUE (class_name)
);
COMMENT ON TABLE product_meta.efficiency_class_lookup IS 'Довідник класів енергоефективності (наприклад, A+++, A++).';

-- Column comments

COMMENT ON COLUMN product_meta.efficiency_class_lookup.efficiency_class_id IS 'Унікальний ідентифікатор класу (PK).';
COMMENT ON COLUMN product_meta.efficiency_class_lookup.class_name IS 'Назва класу (наприклад, A+++).';

-- Permissions

ALTER TABLE product_meta.efficiency_class_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.efficiency_class_lookup TO postgres;


-- product_meta.efficiency_lookup визначення

-- Drop table

-- DROP TABLE product_meta.efficiency_lookup;

CREATE TABLE product_meta.efficiency_lookup (
	efficiency_lookup_id serial4 NOT NULL,
	value numeric(5, 2) NOT NULL,
	description_ukr varchar(255) NULL,
	CONSTRAINT efficiency_lookup_pkey PRIMARY KEY (efficiency_lookup_id),
	CONSTRAINT uq_efficiency_value UNIQUE (value)
);
COMMENT ON TABLE product_meta.efficiency_lookup IS 'Довідник унікальних числових значень коефіцієнтів ефективності (SEER, EER, SCOP, COP).';

-- Permissions

ALTER TABLE product_meta.efficiency_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.efficiency_lookup TO postgres;


-- product_meta.feature_types визначення

-- Drop table

-- DROP TABLE product_meta.feature_types;

CREATE TABLE product_meta.feature_types (
	feature_type_id serial4 NOT NULL,
	name_ukr varchar(100) NOT NULL, -- Назва функції/особливості українською.
	category_ukr varchar(50) NULL, -- Категорія для групування (наприклад, Режим, Керування, Конструкція).
	description_ukr text NULL,
	CONSTRAINT feature_types_name_ukr_key UNIQUE (name_ukr),
	CONSTRAINT feature_types_pkey PRIMARY KEY (feature_type_id)
);
COMMENT ON TABLE product_meta.feature_types IS 'Довідник унікальних функцій, режимів та конструктивних особливостей (Gold Fin, Дисплей, Режим турбо тощо).';

-- Column comments

COMMENT ON COLUMN product_meta.feature_types.name_ukr IS 'Назва функції/особливості українською.';
COMMENT ON COLUMN product_meta.feature_types.category_ukr IS 'Категорія для групування (наприклад, Режим, Керування, Конструкція).';

-- Permissions

ALTER TABLE product_meta.feature_types OWNER TO postgres;
GRANT ALL ON TABLE product_meta.feature_types TO postgres;


-- product_meta.filter_types визначення

-- Drop table

-- DROP TABLE product_meta.filter_types;

CREATE TABLE product_meta.filter_types (
	filter_type_id serial4 NOT NULL,
	name_ukr varchar(100) NOT NULL, -- Назва типу фільтра українською.
	description_ukr text NULL,
	CONSTRAINT filter_types_name_ukr_key UNIQUE (name_ukr),
	CONSTRAINT filter_types_pkey PRIMARY KEY (filter_type_id)
);
COMMENT ON TABLE product_meta.filter_types IS 'Довідник унікальних типів фільтрів (Грубого очищення, Cold-catalyst тощо).';

-- Column comments

COMMENT ON COLUMN product_meta.filter_types.name_ukr IS 'Назва типу фільтра українською.';

-- Permissions

ALTER TABLE product_meta.filter_types OWNER TO postgres;
GRANT ALL ON TABLE product_meta.filter_types TO postgres;


-- product_meta.ip_rating_lookup визначення

-- Drop table

-- DROP TABLE product_meta.ip_rating_lookup;

CREATE TABLE product_meta.ip_rating_lookup (
	ip_rating_id serial4 NOT NULL,
	rating_code varchar(10) NOT NULL, -- Код класу захисту (наприклад, IPX4).
	protection_ukr text NULL, -- Детальний опис захисту українською.
	CONSTRAINT ip_rating_lookup_pkey PRIMARY KEY (ip_rating_id),
	CONSTRAINT ip_rating_lookup_rating_code_key UNIQUE (rating_code)
);
COMMENT ON TABLE product_meta.ip_rating_lookup IS 'Довідник класів захисту (IP-рейтингу).';

-- Column comments

COMMENT ON COLUMN product_meta.ip_rating_lookup.rating_code IS 'Код класу захисту (наприклад, IPX4).';
COMMENT ON COLUMN product_meta.ip_rating_lookup.protection_ukr IS 'Детальний опис захисту українською.';

-- Permissions

ALTER TABLE product_meta.ip_rating_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.ip_rating_lookup TO postgres;


-- product_meta.legal_entity_roles визначення

-- Drop table

-- DROP TABLE product_meta.legal_entity_roles;

CREATE TABLE product_meta.legal_entity_roles (
	role_id serial4 NOT NULL,
	role_name_ukr varchar(100) NOT NULL,
	CONSTRAINT legal_entity_roles_pkey PRIMARY KEY (role_id),
	CONSTRAINT legal_entity_roles_role_name_ukr_key UNIQUE (role_name_ukr)
);
COMMENT ON TABLE product_meta.legal_entity_roles IS 'Довідник можливих ролей юридичних осіб.';

-- Permissions

ALTER TABLE product_meta.legal_entity_roles OWNER TO postgres;
GRANT ALL ON TABLE product_meta.legal_entity_roles TO postgres;


-- product_meta.oil_volume_lookup визначення

-- Drop table

-- DROP TABLE product_meta.oil_volume_lookup;

CREATE TABLE product_meta.oil_volume_lookup (
	oil_volume_id serial4 NOT NULL,
	volume_ml int4 NOT NULL,
	CONSTRAINT oil_volume_lookup_pkey PRIMARY KEY (oil_volume_id),
	CONSTRAINT uix_oil_volume UNIQUE (volume_ml)
);
COMMENT ON TABLE product_meta.oil_volume_lookup IS 'Довідник унікальних значень обсягу мастила.';

-- Permissions

ALTER TABLE product_meta.oil_volume_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.oil_volume_lookup TO postgres;


-- product_meta.operation_modes визначення

-- Drop table

-- DROP TABLE product_meta.operation_modes;

CREATE TABLE product_meta.operation_modes (
	mode_id serial4 NOT NULL, -- Унікальний ідентифікатор режиму роботи (PK).
	mode_name_ukr varchar(50) NOT NULL, -- Назва режиму українською.
	CONSTRAINT operation_modes_mode_name_ukr_key UNIQUE (mode_name_ukr),
	CONSTRAINT operation_modes_pkey PRIMARY KEY (mode_id)
);
COMMENT ON TABLE product_meta.operation_modes IS 'Довідник режимів роботи обладнання.';

-- Column comments

COMMENT ON COLUMN product_meta.operation_modes.mode_id IS 'Унікальний ідентифікатор режиму роботи (PK).';
COMMENT ON COLUMN product_meta.operation_modes.mode_name_ukr IS 'Назва режиму українською.';

-- Permissions

ALTER TABLE product_meta.operation_modes OWNER TO postgres;
GRANT ALL ON TABLE product_meta.operation_modes TO postgres;


-- product_meta.outdoor_mounting_lookup визначення

-- Drop table

-- DROP TABLE product_meta.outdoor_mounting_lookup;

CREATE TABLE product_meta.outdoor_mounting_lookup (
	outdoor_mounting_lookup_id serial4 NOT NULL,
	mount_width_ma_mm int4 NOT NULL, -- MA: Ширина кріплення (по центрах горизонтальних отворів).
	mount_depth_mb_mm int4 NOT NULL, -- MB: Глибина кріплення (по центрах отворів кронштейна).
	mount_depth_p_mm int4 NULL, -- P: Глибина опорної частини кріплення.
	mount_offset_left_ml_mm int4 NULL, -- ML: Відступ зліва (від центру отвору до краю корпусу).
	mount_offset_right_mr_mm int4 NULL,
	service_lid_protrusion_mm int4 NULL, -- Lid: Виступ захисної кришки кранів.
	service_valve_height_st1_mm int4 NULL,
	service_valve_gap_st2_mm int4 NULL,
	CONSTRAINT outdoor_mounting_lookup_pkey PRIMARY KEY (outdoor_mounting_lookup_id),
	CONSTRAINT uix_outdoor_mounting_unique UNIQUE (mount_width_ma_mm, mount_depth_mb_mm, mount_depth_p_mm)
);
COMMENT ON TABLE product_meta.outdoor_mounting_lookup IS 'Довідник монтажних та сервісних розмірів зовнішніх блоків.';

-- Column comments

COMMENT ON COLUMN product_meta.outdoor_mounting_lookup.mount_width_ma_mm IS 'MA: Ширина кріплення (по центрах горизонтальних отворів).';
COMMENT ON COLUMN product_meta.outdoor_mounting_lookup.mount_depth_mb_mm IS 'MB: Глибина кріплення (по центрах отворів кронштейна).';
COMMENT ON COLUMN product_meta.outdoor_mounting_lookup.mount_depth_p_mm IS 'P: Глибина опорної частини кріплення.';
COMMENT ON COLUMN product_meta.outdoor_mounting_lookup.mount_offset_left_ml_mm IS 'ML: Відступ зліва (від центру отвору до краю корпусу).';
COMMENT ON COLUMN product_meta.outdoor_mounting_lookup.service_lid_protrusion_mm IS 'Lid: Виступ захисної кришки кранів.';

-- Permissions

ALTER TABLE product_meta.outdoor_mounting_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.outdoor_mounting_lookup TO postgres;


-- product_meta.pack_size_lookup визначення

-- Drop table

-- DROP TABLE product_meta.pack_size_lookup;

CREATE TABLE product_meta.pack_size_lookup (
	pack_size_lookup_id serial4 NOT NULL,
	length_mm int4 NOT NULL,
	width_mm int4 NOT NULL,
	height_mm int4 NOT NULL,
	CONSTRAINT pack_size_lookup_pkey PRIMARY KEY (pack_size_lookup_id),
	CONSTRAINT uix_pack_size_lookup_unique UNIQUE (length_mm, width_mm, height_mm)
);
COMMENT ON TABLE product_meta.pack_size_lookup IS 'Довідник унікальних наборів розмірів для упаковки.';

-- Permissions

ALTER TABLE product_meta.pack_size_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.pack_size_lookup TO postgres;


-- product_meta.piping_limits_lookup визначення

-- Drop table

-- DROP TABLE product_meta.piping_limits_lookup;

CREATE TABLE product_meta.piping_limits_lookup (
	limit_id serial4 NOT NULL,
	min_length_m int4 NOT NULL,
	max_length_m int4 NOT NULL,
	max_height_diff_m int4 NOT NULL,
	CONSTRAINT piping_limits_lookup_pkey PRIMARY KEY (limit_id),
	CONSTRAINT uix_piping_limits UNIQUE (min_length_m, max_length_m, max_height_diff_m)
);
COMMENT ON TABLE product_meta.piping_limits_lookup IS 'Довідник для унікальних комбінацій обмежень трубопроводу (довжина траси та перепад висот).';

-- Permissions

ALTER TABLE product_meta.piping_limits_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.piping_limits_lookup TO postgres;


-- product_meta.power_params_lookup визначення

-- Drop table

-- DROP TABLE product_meta.power_params_lookup;

CREATE TABLE product_meta.power_params_lookup (
	power_param_id serial4 NOT NULL,
	voltage_range_ukr varchar(20) NOT NULL,
	phase_value int4 NOT NULL,
	frequency_value int4 NOT NULL,
	voltage_range_extended_ukr varchar(50) NULL, -- Розширений допустимий діапазон напруги (наприклад, 165~265 В).
	CONSTRAINT power_params_lookup_pkey PRIMARY KEY (power_param_id),
	CONSTRAINT uq_power_params UNIQUE (voltage_range_ukr, phase_value, frequency_value)
);
COMMENT ON TABLE product_meta.power_params_lookup IS 'Довідник унікальних параметрів електроживлення.';

-- Column comments

COMMENT ON COLUMN product_meta.power_params_lookup.voltage_range_extended_ukr IS 'Розширений допустимий діапазон напруги (наприклад, 165~265 В).';

-- Permissions

ALTER TABLE product_meta.power_params_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.power_params_lookup TO postgres;


-- product_meta.refrigerant_lookup визначення

-- Drop table

-- DROP TABLE product_meta.refrigerant_lookup;

CREATE TABLE product_meta.refrigerant_lookup (
	refrigerant_id serial4 NOT NULL,
	"name" varchar(50) NOT NULL,
	ashrae_class varchar(50) NULL,
	chemical_name_ukr varchar(255) NULL,
	formula_composition varchar(255) NULL,
	cas_number varchar(50) NULL,
	oil_type_compatibility_ukr varchar(255) NULL,
	safety_group_ashrae_34 varchar(10) NULL,
	fluid_group_ped varchar(100) NULL,
	lower_flammability_limit_percent numeric(5, 2) NULL,
	autoignition_temp_c numeric(5, 1) NULL,
	critical_temp_c numeric(5, 1) NULL,
	critical_pressure_mpa numeric(5, 2) NULL,
	boiling_point_at_0barg_c numeric(5, 1) NULL,
	triple_point_c numeric(5, 1) NULL,
	nominal_glide_k numeric(4, 2) NULL,
	normal_gas_density_kg_m3 numeric(6, 4) NULL,
	molecular_weight_g_mol numeric(6, 2) NULL,
	gwp_ar4_100y_co2_1 int4 NULL, -- Потенціал глобального потепління (GWP) за AR4 (100 років), CO₂=1.
	cylinder_color_info_ukr varchar(255) NULL,
	CONSTRAINT refrigerant_lookup_pkey PRIMARY KEY (refrigerant_id),
	CONSTRAINT uix_refrigerant_name UNIQUE (name)
);
COMMENT ON TABLE product_meta.refrigerant_lookup IS 'Довідник характеристик холодоагентів (фреонів).';

-- Column comments

COMMENT ON COLUMN product_meta.refrigerant_lookup.gwp_ar4_100y_co2_1 IS 'Потенціал глобального потепління (GWP) за AR4 (100 років), CO₂=1.';

-- Permissions

ALTER TABLE product_meta.refrigerant_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.refrigerant_lookup TO postgres;


-- product_meta.size_lookup визначення

-- Drop table

-- DROP TABLE product_meta.size_lookup;

CREATE TABLE product_meta.size_lookup (
	size_lookup_id serial4 NOT NULL,
	length_mm int4 NOT NULL,
	width_mm int4 NOT NULL,
	height_mm int4 NOT NULL,
	CONSTRAINT size_lookup_pkey PRIMARY KEY (size_lookup_id),
	CONSTRAINT uix_size_lookup_unique UNIQUE (length_mm, width_mm, height_mm)
);
COMMENT ON TABLE product_meta.size_lookup IS 'Довідник унікальних наборів розмірів (довжина, ширина, висота) для корпусів.';

-- Permissions

ALTER TABLE product_meta.size_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.size_lookup TO postgres;


-- product_meta.standard_diameter_lookup визначення

-- Drop table

-- DROP TABLE product_meta.standard_diameter_lookup;

CREATE TABLE product_meta.standard_diameter_lookup (
	diameter_id serial4 NOT NULL,
	diameter_mm numeric(5, 2) NOT NULL, -- Діаметр у міліметрах (мм).
	diameter_inch_frac varchar(10) NOT NULL, -- Діаметр у дюймах (дробовий формат, наприклад 1/4in).
	diameter_inch_dec numeric(5, 3) NOT NULL, -- Діаметр у дюймах (десятковий формат, наприклад 0.250). Використовується для перевірки та обчислень.
	CONSTRAINT check_mm_to_inch CHECK ((round((diameter_mm / 25.4), 3) = diameter_inch_dec)),
	CONSTRAINT standard_diameter_lookup_diameter_inch_frac_key UNIQUE (diameter_inch_frac),
	CONSTRAINT standard_diameter_lookup_diameter_mm_key UNIQUE (diameter_mm),
	CONSTRAINT standard_diameter_lookup_pkey PRIMARY KEY (diameter_id)
);
COMMENT ON TABLE product_meta.standard_diameter_lookup IS 'Універсальний довідник стандартних діаметрів трубопроводів (мм, дрібний дюйм, десятковий дюйм).';

-- Column comments

COMMENT ON COLUMN product_meta.standard_diameter_lookup.diameter_mm IS 'Діаметр у міліметрах (мм).';
COMMENT ON COLUMN product_meta.standard_diameter_lookup.diameter_inch_frac IS 'Діаметр у дюймах (дробовий формат, наприклад 1/4in).';
COMMENT ON COLUMN product_meta.standard_diameter_lookup.diameter_inch_dec IS 'Діаметр у дюймах (десятковий формат, наприклад 0.250). Використовується для перевірки та обчислень.';

-- Permissions

ALTER TABLE product_meta.standard_diameter_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.standard_diameter_lookup TO postgres;


-- product_meta.temp_characteristic_types визначення

-- Drop table

-- DROP TABLE product_meta.temp_characteristic_types;

CREATE TABLE product_meta.temp_characteristic_types (
	char_type_id serial4 NOT NULL,
	char_type_name_ukr varchar(100) NOT NULL,
	char_type_code varchar(20) NOT NULL,
	CONSTRAINT temp_characteristic_types_char_type_code_key UNIQUE (char_type_code),
	CONSTRAINT temp_characteristic_types_pkey PRIMARY KEY (char_type_id)
);
COMMENT ON TABLE product_meta.temp_characteristic_types IS 'Довідник типів температурних характеристик (встановлення, внутр. охол, зовн. обігрів і т.д.).';

-- Permissions

ALTER TABLE product_meta.temp_characteristic_types OWNER TO postgres;
GRANT ALL ON TABLE product_meta.temp_characteristic_types TO postgres;


-- product_meta.template_types визначення

-- Drop table

-- DROP TABLE product_meta.template_types;

CREATE TABLE product_meta.template_types (
	template_type_id serial4 NOT NULL,
	type_name_ukr varchar(100) NOT NULL,
	type_code varchar(50) NOT NULL,
	description_ukr text NULL,
	CONSTRAINT template_types_pkey PRIMARY KEY (template_type_id),
	CONSTRAINT template_types_type_code_key UNIQUE (type_code),
	CONSTRAINT template_types_type_name_ukr_key UNIQUE (type_name_ukr)
);
COMMENT ON TABLE product_meta.template_types IS 'Довідник типів/секцій для текстових шаблонів (заголовки блоків).';

-- Permissions

ALTER TABLE product_meta.template_types OWNER TO postgres;
GRANT ALL ON TABLE product_meta.template_types TO postgres;


-- product_meta.unit_types визначення

-- Drop table

-- DROP TABLE product_meta.unit_types;

CREATE TABLE product_meta.unit_types (
	unit_type_id serial4 NOT NULL, -- Унікальний ідентифікатор типу блоку (PK).
	type_name_ukr varchar(50) NOT NULL, -- Повна назва типу блоку українською (наприклад, Внутрішній блок, Декоративна панель).
	type_code varchar(10) NOT NULL, -- Короткий код типу блоку (наприклад, INDOOR, PANEL).
	CONSTRAINT unit_types_pkey PRIMARY KEY (unit_type_id),
	CONSTRAINT unit_types_type_code_key UNIQUE (type_code),
	CONSTRAINT unit_types_type_name_ukr_key UNIQUE (type_name_ukr)
);
COMMENT ON TABLE product_meta.unit_types IS 'Довідник типів компонентів.';

-- Column comments

COMMENT ON COLUMN product_meta.unit_types.unit_type_id IS 'Унікальний ідентифікатор типу блоку (PK).';
COMMENT ON COLUMN product_meta.unit_types.type_name_ukr IS 'Повна назва типу блоку українською (наприклад, Внутрішній блок, Декоративна панель).';
COMMENT ON COLUMN product_meta.unit_types.type_code IS 'Короткий код типу блоку (наприклад, INDOOR, PANEL).';

-- Permissions

ALTER TABLE product_meta.unit_types OWNER TO postgres;
GRANT ALL ON TABLE product_meta.unit_types TO postgres;


-- product_meta.units визначення

-- Drop table

-- DROP TABLE product_meta.units;

CREATE TABLE product_meta.units (
	unit_id serial4 NOT NULL, -- Унікальний ідентифікатор одиниці виміру (PK).
	unit_name_ukr varchar(50) NOT NULL, -- Повна назва одиниці виміру українською.
	unit_symbol varchar(10) NOT NULL, -- Символ одиниці виміру.
	unit_symbol_eng varchar(50) NULL,
	unit_name_eng varchar(255) NULL, -- Повна назва одиниці виміру англійською.
	description_ukr text NULL,
	CONSTRAINT units_pkey PRIMARY KEY (unit_id),
	CONSTRAINT units_unit_name_ukr_key UNIQUE (unit_name_ukr),
	CONSTRAINT units_unit_symbol_key UNIQUE (unit_symbol)
);
COMMENT ON TABLE product_meta.units IS 'Довідник одиниць виміру (наприклад, kW, BTU/h, м, кг).';

-- Column comments

COMMENT ON COLUMN product_meta.units.unit_id IS 'Унікальний ідентифікатор одиниці виміру (PK).';
COMMENT ON COLUMN product_meta.units.unit_name_ukr IS 'Повна назва одиниці виміру українською.';
COMMENT ON COLUMN product_meta.units.unit_symbol IS 'Символ одиниці виміру.';
COMMENT ON COLUMN product_meta.units.unit_name_eng IS 'Повна назва одиниці виміру англійською.';

-- Permissions

ALTER TABLE product_meta.units OWNER TO postgres;
GRANT ALL ON TABLE product_meta.units TO postgres;


-- product_meta.air_flow_lookup визначення

-- Drop table

-- DROP TABLE product_meta.air_flow_lookup;

CREATE TABLE product_meta.air_flow_lookup (
	air_flow_lookup_id serial4 NOT NULL,
	value_hi int4 NOT NULL,
	value_mi int4 NULL,
	value_lo int4 NULL,
	unit_id int4 NOT NULL,
	unit_type_id int4 NULL, -- Зовнішній ключ до product_meta.unit_types (Внутрішній/Зовнішній блок).
	CONSTRAINT air_flow_lookup_pkey PRIMARY KEY (air_flow_lookup_id),
	CONSTRAINT uq_air_flow_set UNIQUE (value_hi, value_mi, value_lo, unit_id, unit_type_id),
	CONSTRAINT air_flow_lookup_unit_id_fkey FOREIGN KEY (unit_id) REFERENCES product_meta.units(unit_id) ON DELETE RESTRICT,
	CONSTRAINT air_flow_lookup_unit_type_id_fkey FOREIGN KEY (unit_type_id) REFERENCES product_meta.unit_types(unit_type_id) ON DELETE RESTRICT
);
COMMENT ON TABLE product_meta.air_flow_lookup IS 'Довідник унікальних наборів значень витрати повітря (Hi/Mi/Lo).';

-- Column comments

COMMENT ON COLUMN product_meta.air_flow_lookup.unit_type_id IS 'Зовнішній ключ до product_meta.unit_types (Внутрішній/Зовнішній блок).';

-- Permissions

ALTER TABLE product_meta.air_flow_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.air_flow_lookup TO postgres;


-- product_meta.area_lookup визначення

-- Drop table

-- DROP TABLE product_meta.area_lookup;

CREATE TABLE product_meta.area_lookup (
	area_lookup_id serial4 NOT NULL,
	value_standard numeric(5, 1) NOT NULL, -- Числове значення площі.
	unit_id int4 NOT NULL, -- Зовнішній ключ до одиниці виміру (кв.м).
	CONSTRAINT area_lookup_pkey PRIMARY KEY (area_lookup_id),
	CONSTRAINT uq_area_value UNIQUE (value_standard, unit_id),
	CONSTRAINT area_lookup_unit_id_fkey FOREIGN KEY (unit_id) REFERENCES product_meta.units(unit_id) ON DELETE RESTRICT
);
COMMENT ON TABLE product_meta.area_lookup IS 'Довідник унікальних значень рекомендованої площі обслуговування.';

-- Column comments

COMMENT ON COLUMN product_meta.area_lookup.value_standard IS 'Числове значення площі.';
COMMENT ON COLUMN product_meta.area_lookup.unit_id IS 'Зовнішній ключ до одиниці виміру (кв.м).';

-- Permissions

ALTER TABLE product_meta.area_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.area_lookup TO postgres;


-- product_meta.breaker_requirements_lookup визначення

-- Drop table

-- DROP TABLE product_meta.breaker_requirements_lookup;

CREATE TABLE product_meta.breaker_requirements_lookup (
	breaker_id serial4 NOT NULL,
	rated_current numeric(4, 1) NOT NULL,
	type_class bpchar(1) NOT NULL,
	unit_id int4 NOT NULL,
	CONSTRAINT breaker_requirements_lookup_pkey PRIMARY KEY (breaker_id),
	CONSTRAINT uix_breaker UNIQUE (rated_current, type_class, unit_id),
	CONSTRAINT fk_breaker_unit FOREIGN KEY (unit_id) REFERENCES product_meta.units(unit_id) ON DELETE RESTRICT
);
COMMENT ON TABLE product_meta.breaker_requirements_lookup IS 'Довідник для унікальних комбінацій вимог до автоматичного вимикача (номінальний струм та тип).';

-- Permissions

ALTER TABLE product_meta.breaker_requirements_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.breaker_requirements_lookup TO postgres;


-- product_meta.cable_lookup визначення

-- Drop table

-- DROP TABLE product_meta.cable_lookup;

CREATE TABLE product_meta.cable_lookup (
	cable_lookup_id serial4 NOT NULL,
	num_cores int4 NOT NULL,
	cross_section_sqmm numeric(4, 2) NOT NULL,
	unit_id int4 NULL, -- Посилання на одиницю вимірювання перерізу кабелю (наприклад, мм²).
	CONSTRAINT cable_lookup_pkey PRIMARY KEY (cable_lookup_id),
	CONSTRAINT uq_cable_spec UNIQUE (num_cores, cross_section_sqmm, unit_id),
	CONSTRAINT cable_lookup_unit_id_fkey FOREIGN KEY (unit_id) REFERENCES product_meta.units(unit_id) ON DELETE RESTRICT
);
COMMENT ON TABLE product_meta.cable_lookup IS 'Довідник унікальних специфікацій кабелів.';

-- Column comments

COMMENT ON COLUMN product_meta.cable_lookup.unit_id IS 'Посилання на одиницю вимірювання перерізу кабелю (наприклад, мм²).';

-- Permissions

ALTER TABLE product_meta.cable_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.cable_lookup TO postgres;


-- product_meta.capacity_lookup визначення

-- Drop table

-- DROP TABLE product_meta.capacity_lookup;

CREATE TABLE product_meta.capacity_lookup (
	capacity_lookup_id serial4 NOT NULL,
	mode_id int4 NOT NULL,
	unit_id int4 NOT NULL,
	value_standard int4 NOT NULL, -- Номінальна потужність (наприклад, 7000 BTU).
	value_min int4 NULL,
	value_max int4 NULL,
	CONSTRAINT capacity_lookup_pkey PRIMARY KEY (capacity_lookup_id),
	CONSTRAINT uq_capacity_data UNIQUE (mode_id, unit_id, value_standard),
	CONSTRAINT uq_capacity_set UNIQUE (mode_id, unit_id, value_standard, value_min, value_max),
	CONSTRAINT capacity_lookup_mode_id_fkey FOREIGN KEY (mode_id) REFERENCES product_meta.operation_modes(mode_id) ON DELETE RESTRICT,
	CONSTRAINT capacity_lookup_unit_id_fkey FOREIGN KEY (unit_id) REFERENCES product_meta.units(unit_id) ON DELETE RESTRICT
);
COMMENT ON TABLE product_meta.capacity_lookup IS 'Довідник унікальних наборів характеристик потужності.';

-- Column comments

COMMENT ON COLUMN product_meta.capacity_lookup.value_standard IS 'Номінальна потужність (наприклад, 7000 BTU).';

-- Permissions

ALTER TABLE product_meta.capacity_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.capacity_lookup TO postgres;


-- product_meta.compressor_lookup визначення

-- Drop table

-- DROP TABLE product_meta.compressor_lookup;

CREATE TABLE product_meta.compressor_lookup (
	compressor_lookup_id serial4 NOT NULL,
	manufacturer_id int4 NOT NULL,
	control_type_id int4 NOT NULL,
	principle_id int4 NOT NULL,
	oil_type varchar(50) NOT NULL,
	model_name varchar(100) NULL,
	CONSTRAINT compressor_lookup_pkey PRIMARY KEY (compressor_lookup_id),
	CONSTRAINT uix_compressor_unique UNIQUE (manufacturer_id, control_type_id, principle_id, oil_type),
	CONSTRAINT compressor_lookup_control_type_id_fkey FOREIGN KEY (control_type_id) REFERENCES product_meta.compressor_control_type(control_type_id) ON DELETE RESTRICT,
	CONSTRAINT compressor_lookup_manufacturer_id_fkey FOREIGN KEY (manufacturer_id) REFERENCES product_meta.compressor_manuf_lookup(manuf_id) ON DELETE RESTRICT,
	CONSTRAINT compressor_lookup_principle_id_fkey FOREIGN KEY (principle_id) REFERENCES product_meta.compressor_work_principle(principle_id) ON DELETE RESTRICT
);
COMMENT ON TABLE product_meta.compressor_lookup IS 'Довідник унікальних комбінацій характеристик компресорів (без обсягу мастила).';

-- Permissions

ALTER TABLE product_meta.compressor_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.compressor_lookup TO postgres;


-- product_meta.conversion_factors визначення

-- Drop table

-- DROP TABLE product_meta.conversion_factors;

CREATE TABLE product_meta.conversion_factors (
	factor_id serial4 NOT NULL, -- Унікальний ідентифікатор коефіцієнта (PK).
	from_unit_id int4 NOT NULL, -- Зовнішній ключ до product_meta.units: ID одиниці, З ЯКОЇ здійснюється перерахунок.
	to_unit_id int4 NOT NULL, -- Зовнішній ключ до product_meta.units: ID одиниці, В ЯКУ здійснюється перерахунок.
	multiplier numeric(20, 10) NOT NULL, -- Коефіцієнт множення. Формула: TargetValue = (SourceValue * Multiplier) + AdditiveOffset.
	additive_offset numeric(10, 5) DEFAULT 0 NULL, -- Числовий зсув (використовується переважно для температур). Формула: TargetValue = (SourceValue * Multiplier) + AdditiveOffset.
	category_id int4 NOT NULL, -- Зовнішній ключ до conversion_categories, що визначає тип величини.
	CONSTRAINT conversion_factors_pkey PRIMARY KEY (factor_id),
	CONSTRAINT uix_factor UNIQUE (from_unit_id, to_unit_id),
	CONSTRAINT fk_conversion_category FOREIGN KEY (category_id) REFERENCES product_meta.conversion_categories(category_id) ON DELETE RESTRICT,
	CONSTRAINT fk_from_unit FOREIGN KEY (from_unit_id) REFERENCES product_meta.units(unit_id) ON DELETE RESTRICT,
	CONSTRAINT fk_to_unit FOREIGN KEY (to_unit_id) REFERENCES product_meta.units(unit_id) ON DELETE RESTRICT
);
COMMENT ON TABLE product_meta.conversion_factors IS 'Коефіцієнти для перерахунку одиниць виміру.';

-- Column comments

COMMENT ON COLUMN product_meta.conversion_factors.factor_id IS 'Унікальний ідентифікатор коефіцієнта (PK).';
COMMENT ON COLUMN product_meta.conversion_factors.from_unit_id IS 'Зовнішній ключ до product_meta.units: ID одиниці, З ЯКОЇ здійснюється перерахунок.';
COMMENT ON COLUMN product_meta.conversion_factors.to_unit_id IS 'Зовнішній ключ до product_meta.units: ID одиниці, В ЯКУ здійснюється перерахунок.';
COMMENT ON COLUMN product_meta.conversion_factors.multiplier IS 'Коефіцієнт множення. Формула: TargetValue = (SourceValue * Multiplier) + AdditiveOffset.';
COMMENT ON COLUMN product_meta.conversion_factors.additive_offset IS 'Числовий зсув (використовується переважно для температур). Формула: TargetValue = (SourceValue * Multiplier) + AdditiveOffset.';
COMMENT ON COLUMN product_meta.conversion_factors.category_id IS 'Зовнішній ключ до conversion_categories, що визначає тип величини.';

-- Permissions

ALTER TABLE product_meta.conversion_factors OWNER TO postgres;
GRANT ALL ON TABLE product_meta.conversion_factors TO postgres;


-- product_meta.design_pressure_lookup визначення

-- Drop table

-- DROP TABLE product_meta.design_pressure_lookup;

CREATE TABLE product_meta.design_pressure_lookup (
	pressure_lookup_id serial4 NOT NULL,
	pressure_high numeric(6, 2) NOT NULL,
	pressure_low numeric(6, 2) NOT NULL,
	unit_id int4 NOT NULL,
	CONSTRAINT design_pressure_lookup_pkey PRIMARY KEY (pressure_lookup_id),
	CONSTRAINT uix_pressure UNIQUE (pressure_high, pressure_low, unit_id),
	CONSTRAINT fk_pressure_unit FOREIGN KEY (unit_id) REFERENCES product_meta.units(unit_id) ON DELETE RESTRICT
);
COMMENT ON TABLE product_meta.design_pressure_lookup IS 'Довідник значень розрахункового тиску (високий/низький) та одиниць виміру.';

-- Permissions

ALTER TABLE product_meta.design_pressure_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.design_pressure_lookup TO postgres;


-- product_meta.max_current_lookup визначення

-- Drop table

-- DROP TABLE product_meta.max_current_lookup;

CREATE TABLE product_meta.max_current_lookup (
	max_current_lookup_id serial4 NOT NULL,
	value_ampere numeric(4, 1) NOT NULL,
	unit_id int4 NULL, -- Посилання на одиницю вимірювання струму (наприклад, А).
	value_min_ampere numeric(4, 2) NULL,
	value_max_ampere numeric(4, 2) NULL,
	CONSTRAINT max_current_lookup_pkey PRIMARY KEY (max_current_lookup_id),
	CONSTRAINT uq_max_current_value UNIQUE (value_ampere, unit_id, value_min_ampere, value_max_ampere),
	CONSTRAINT max_current_lookup_unit_id_fkey FOREIGN KEY (unit_id) REFERENCES product_meta.units(unit_id) ON DELETE RESTRICT
);
COMMENT ON TABLE product_meta.max_current_lookup IS 'Довідник унікальних значень струму, включаючи номінальні та діапазони.';

-- Column comments

COMMENT ON COLUMN product_meta.max_current_lookup.unit_id IS 'Посилання на одиницю вимірювання струму (наприклад, А).';

-- Permissions

ALTER TABLE product_meta.max_current_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.max_current_lookup TO postgres;


-- product_meta.max_power_lookup визначення

-- Drop table

-- DROP TABLE product_meta.max_power_lookup;

CREATE TABLE product_meta.max_power_lookup (
	max_power_lookup_id serial4 NOT NULL,
	value_watt int4 NOT NULL,
	unit_id int4 NULL, -- Посилання на одиницю вимірювання потужності (наприклад, Вт).
	CONSTRAINT max_power_lookup_pkey PRIMARY KEY (max_power_lookup_id),
	CONSTRAINT uq_max_power_value UNIQUE (value_watt, unit_id),
	CONSTRAINT max_power_lookup_unit_id_fkey FOREIGN KEY (unit_id) REFERENCES product_meta.units(unit_id) ON DELETE RESTRICT
);
COMMENT ON TABLE product_meta.max_power_lookup IS 'Довідник унікальних значень максимальної споживаної потужності.';

-- Column comments

COMMENT ON COLUMN product_meta.max_power_lookup.unit_id IS 'Посилання на одиницю вимірювання потужності (наприклад, Вт).';

-- Permissions

ALTER TABLE product_meta.max_power_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.max_power_lookup TO postgres;


-- product_meta.piping_set_lookup визначення

-- Drop table

-- DROP TABLE product_meta.piping_set_lookup;

CREATE TABLE product_meta.piping_set_lookup (
	piping_set_id serial4 NOT NULL,
	liquid_diameter_id int4 NOT NULL,
	gas_diameter_id int4 NOT NULL,
	CONSTRAINT piping_set_lookup_pkey PRIMARY KEY (piping_set_id),
	CONSTRAINT uix_piping_set UNIQUE (liquid_diameter_id, gas_diameter_id),
	CONSTRAINT fk_gas_diam FOREIGN KEY (gas_diameter_id) REFERENCES product_meta.standard_diameter_lookup(diameter_id) ON DELETE RESTRICT,
	CONSTRAINT fk_liquid_diam FOREIGN KEY (liquid_diameter_id) REFERENCES product_meta.standard_diameter_lookup(diameter_id) ON DELETE RESTRICT
);
COMMENT ON TABLE product_meta.piping_set_lookup IS 'Довідник унікальних комбінацій діаметрів рідинної та газової труб.';

-- Permissions

ALTER TABLE product_meta.piping_set_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.piping_set_lookup TO postgres;


-- product_meta.range_value_lookup визначення

-- Drop table

-- DROP TABLE product_meta.range_value_lookup;

CREATE TABLE product_meta.range_value_lookup (
	range_value_id serial4 NOT NULL,
	value_min numeric(4, 1) NOT NULL,
	value_max numeric(4, 1) NOT NULL,
	unit_id int4 NOT NULL,
	CONSTRAINT range_value_lookup_pkey PRIMARY KEY (range_value_id),
	CONSTRAINT uix_range_value UNIQUE (value_min, value_max, unit_id),
	CONSTRAINT fk_range_unit FOREIGN KEY (unit_id) REFERENCES product_meta.units(unit_id) ON DELETE RESTRICT
);
COMMENT ON TABLE product_meta.range_value_lookup IS 'Універсальний довідник для числових діапазонів значень (від Min до Max).';

-- Permissions

ALTER TABLE product_meta.range_value_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.range_value_lookup TO postgres;


-- product_meta.refrigerant_weight_lookup визначення

-- Drop table

-- DROP TABLE product_meta.refrigerant_weight_lookup;

CREATE TABLE product_meta.refrigerant_weight_lookup (
	ref_weight_id serial4 NOT NULL,
	weight_kg numeric(6, 3) NOT NULL,
	unit_id int4 NOT NULL,
	CONSTRAINT refrigerant_weight_lookup_pkey PRIMARY KEY (ref_weight_id),
	CONSTRAINT uix_ref_weight UNIQUE (weight_kg, unit_id),
	CONSTRAINT fk_ref_weight_unit FOREIGN KEY (unit_id) REFERENCES product_meta.units(unit_id) ON DELETE RESTRICT
);
COMMENT ON TABLE product_meta.refrigerant_weight_lookup IS 'Довідник унікальних значень ваги холодоагенту (заводська заправка) та одиниць виміру.';

-- Permissions

ALTER TABLE product_meta.refrigerant_weight_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.refrigerant_weight_lookup TO postgres;


-- product_meta.series визначення

-- Drop table

-- DROP TABLE product_meta.series;

CREATE TABLE product_meta.series (
	series_id serial4 NOT NULL,
	name_ukr varchar(255) NOT NULL,
	keywords text NULL,
	conditioner_type_id int4 NULL,
	CONSTRAINT series_name_ukr_key UNIQUE (name_ukr),
	CONSTRAINT series_pkey PRIMARY KEY (series_id),
	CONSTRAINT series_conditioner_type_id_fkey FOREIGN KEY (conditioner_type_id) REFERENCES product_meta.conditioner_types(conditioner_type_id) ON DELETE RESTRICT
);
COMMENT ON TABLE product_meta.series IS 'Універсальний довідник серій продукції.';

-- Permissions

ALTER TABLE product_meta.series OWNER TO postgres;
GRANT ALL ON TABLE product_meta.series TO postgres;


-- product_meta.temp_ranges_set_lookup визначення

-- Drop table

-- DROP TABLE product_meta.temp_ranges_set_lookup;

CREATE TABLE product_meta.temp_ranges_set_lookup (
	temp_set_id serial4 NOT NULL,
	setpoint_id int4 NULL,
	indoor_cool_id int4 NULL,
	indoor_heat_id int4 NULL,
	outdoor_cool_id int4 NULL,
	outdoor_heat_id int4 NULL,
	CONSTRAINT temp_ranges_set_lookup_pkey PRIMARY KEY (temp_set_id),
	CONSTRAINT uix_temp_set UNIQUE (setpoint_id, indoor_cool_id, indoor_heat_id, outdoor_cool_id, outdoor_heat_id),
	CONSTRAINT fk_in_cool_range FOREIGN KEY (indoor_cool_id) REFERENCES product_meta.range_value_lookup(range_value_id) ON DELETE RESTRICT,
	CONSTRAINT fk_in_heat_range FOREIGN KEY (indoor_heat_id) REFERENCES product_meta.range_value_lookup(range_value_id) ON DELETE RESTRICT,
	CONSTRAINT fk_out_cool_range FOREIGN KEY (outdoor_cool_id) REFERENCES product_meta.range_value_lookup(range_value_id) ON DELETE RESTRICT,
	CONSTRAINT fk_out_heat_range FOREIGN KEY (outdoor_heat_id) REFERENCES product_meta.range_value_lookup(range_value_id) ON DELETE RESTRICT,
	CONSTRAINT fk_setpoint_range FOREIGN KEY (setpoint_id) REFERENCES product_meta.range_value_lookup(range_value_id) ON DELETE RESTRICT
);
COMMENT ON TABLE product_meta.temp_ranges_set_lookup IS 'Зв''язна таблиця, що агрегує всі температурні діапазони в один набір для моделі.';

-- Permissions

ALTER TABLE product_meta.temp_ranges_set_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.temp_ranges_set_lookup TO postgres;


-- product_meta.text_templates визначення

-- Drop table

-- DROP TABLE product_meta.text_templates;

CREATE TABLE product_meta.text_templates (
	template_id serial4 NOT NULL,
	template_type_id int4 NOT NULL,
	brand_id int4 NULL,
	series_type_ukr varchar(50) NULL,
	template_content text NOT NULL, -- Вміст шаблону (текст з плейсхолдерами, наприклад, {Brand}).
	priority int4 DEFAULT 100 NULL,
	CONSTRAINT text_templates_pkey PRIMARY KEY (template_id),
	CONSTRAINT text_templates_template_type_id_brand_id_series_type_ukr_key UNIQUE (template_type_id, brand_id, series_type_ukr),
	CONSTRAINT text_templates_brand_id_fkey FOREIGN KEY (brand_id) REFERENCES product_meta.brands(brand_id) ON DELETE SET NULL,
	CONSTRAINT text_templates_template_type_id_fkey FOREIGN KEY (template_type_id) REFERENCES product_meta.template_types(template_type_id) ON DELETE RESTRICT
);
COMMENT ON TABLE product_meta.text_templates IS 'Зберігає текстові шаблони (маркетингові описи) з плейсхолдерами.';

-- Column comments

COMMENT ON COLUMN product_meta.text_templates.template_content IS 'Вміст шаблону (текст з плейсхолдерами, наприклад, {Brand}).';

-- Permissions

ALTER TABLE product_meta.text_templates OWNER TO postgres;
GRANT ALL ON TABLE product_meta.text_templates TO postgres;


-- product_meta.warranty_lookup визначення

-- Drop table

-- DROP TABLE product_meta.warranty_lookup;

CREATE TABLE product_meta.warranty_lookup (
	warranty_lookup_id serial4 NOT NULL,
	value_standard int4 NOT NULL,
	unit_id int4 NOT NULL,
	description_ukr varchar(255) NULL,
	CONSTRAINT uq_warranty_set UNIQUE (value_standard, unit_id, description_ukr),
	CONSTRAINT uq_warranty_term UNIQUE (value_standard, unit_id),
	CONSTRAINT warranty_lookup_pkey PRIMARY KEY (warranty_lookup_id),
	CONSTRAINT warranty_lookup_unit_id_fkey FOREIGN KEY (unit_id) REFERENCES product_meta.units(unit_id) ON DELETE RESTRICT
);
COMMENT ON TABLE product_meta.warranty_lookup IS 'Довідник унікальних значень гарантійного терміну.';

-- Permissions

ALTER TABLE product_meta.warranty_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.warranty_lookup TO postgres;


-- product_meta.weight_lookup визначення

-- Drop table

-- DROP TABLE product_meta.weight_lookup;

CREATE TABLE product_meta.weight_lookup (
	weight_lookup_id serial4 NOT NULL,
	netto_kg numeric(10, 2) NOT NULL,
	brutto_kg numeric(10, 2) NULL,
	unit_id int4 NOT NULL,
	unit_type_id int4 NOT NULL,
	CONSTRAINT uq_weight_set UNIQUE (netto_kg, brutto_kg, unit_type_id),
	CONSTRAINT weight_lookup_pkey PRIMARY KEY (weight_lookup_id),
	CONSTRAINT weight_lookup_unit_id_fkey FOREIGN KEY (unit_id) REFERENCES product_meta.units(unit_id) ON DELETE RESTRICT,
	CONSTRAINT weight_lookup_unit_type_id_fkey FOREIGN KEY (unit_type_id) REFERENCES product_meta.unit_types(unit_type_id) ON DELETE RESTRICT
);
COMMENT ON TABLE product_meta.weight_lookup IS 'Довідник унікальних комбінацій ваги (Нетто/Брутто) для блоків.';

-- Permissions

ALTER TABLE product_meta.weight_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.weight_lookup TO postgres;


-- product_meta.legal_entity_to_role визначення

-- Drop table

-- DROP TABLE product_meta.legal_entity_to_role;

CREATE TABLE product_meta.legal_entity_to_role (
	entity_id int4 NOT NULL,
	role_id int4 NOT NULL,
	CONSTRAINT legal_entity_to_role_pkey PRIMARY KEY (entity_id, role_id)
);
COMMENT ON TABLE product_meta.legal_entity_to_role IS 'Зв''язна таблиця, що визначає ролі юридичних осіб.';

-- Permissions

ALTER TABLE product_meta.legal_entity_to_role OWNER TO postgres;
GRANT ALL ON TABLE product_meta.legal_entity_to_role TO postgres;


-- product_meta.product_lookup визначення

-- Drop table

-- DROP TABLE product_meta.product_lookup;

CREATE TABLE product_meta.product_lookup (
	lookup_id serial4 NOT NULL,
	brand_id int4 NOT NULL,
	series_id int4 NULL, -- ID серії. NULL, якщо модель належить безпосередньо бренду.
	importer_id int4 NOT NULL,
	manufacturer_id int4 NOT NULL,
	brand_country_id int4 NULL,
	business_line_id int4 NULL, -- Зовнішній ключ до business_lines. Визначає бізнес-лінію продукту (побутова/напівпромислова).
	CONSTRAINT product_lookup_pkey PRIMARY KEY (lookup_id),
	CONSTRAINT uq_brand_series UNIQUE (brand_id, series_id)
);
CREATE UNIQUE INDEX product_lookup_unique_idx ON product_meta.product_lookup USING btree (brand_id, COALESCE(series_id, 0), importer_id, manufacturer_id);
CREATE UNIQUE INDEX uq_product_metadata ON product_meta.product_lookup USING btree (brand_id, COALESCE(series_id, 0), importer_id, manufacturer_id);
COMMENT ON TABLE product_meta.product_lookup IS 'Центральна таблиця, що зберігає унікальні комбінації ID: Бренд, Серія, Імпортер, Фабрика.';

-- Column comments

COMMENT ON COLUMN product_meta.product_lookup.series_id IS 'ID серії. NULL, якщо модель належить безпосередньо бренду.';
COMMENT ON COLUMN product_meta.product_lookup.business_line_id IS 'Зовнішній ключ до business_lines. Визначає бізнес-лінію продукту (побутова/напівпромислова).';

-- Permissions

ALTER TABLE product_meta.product_lookup OWNER TO postgres;
GRANT ALL ON TABLE product_meta.product_lookup TO postgres;


-- product_meta.legal_entity_to_role зовнішні ключі

ALTER TABLE product_meta.legal_entity_to_role ADD CONSTRAINT legal_entity_to_role_entity_id_fkey FOREIGN KEY (entity_id) REFERENCES core.legal_entities(entity_id) ON DELETE CASCADE;
ALTER TABLE product_meta.legal_entity_to_role ADD CONSTRAINT legal_entity_to_role_role_id_fkey FOREIGN KEY (role_id) REFERENCES product_meta.legal_entity_roles(role_id) ON DELETE CASCADE;


-- product_meta.product_lookup зовнішні ключі

ALTER TABLE product_meta.product_lookup ADD CONSTRAINT product_lookup_brand_country_id_fkey FOREIGN KEY (brand_country_id) REFERENCES core.countries(country_id);
ALTER TABLE product_meta.product_lookup ADD CONSTRAINT product_lookup_brand_id_fkey FOREIGN KEY (brand_id) REFERENCES product_meta.brands(brand_id) ON DELETE CASCADE;
ALTER TABLE product_meta.product_lookup ADD CONSTRAINT product_lookup_business_line_id_fkey FOREIGN KEY (business_line_id) REFERENCES product_meta.business_lines(business_line_id) ON DELETE RESTRICT;
ALTER TABLE product_meta.product_lookup ADD CONSTRAINT product_lookup_importer_id_fkey FOREIGN KEY (importer_id) REFERENCES core.legal_entities(entity_id);
ALTER TABLE product_meta.product_lookup ADD CONSTRAINT product_lookup_manufacturer_id_fkey FOREIGN KEY (manufacturer_id) REFERENCES core.legal_entities(entity_id);
ALTER TABLE product_meta.product_lookup ADD CONSTRAINT product_lookup_series_id_fkey FOREIGN KEY (series_id) REFERENCES product_meta.series(series_id);
